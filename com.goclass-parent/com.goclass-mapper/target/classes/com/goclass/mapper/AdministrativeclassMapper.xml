<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goclass.mapper.AdministrativeclassMapper">
  <resultMap id="BaseResultMap" type="com.goclass.pojo.Administrativeclass">
    <id column="administrative_classroom_id" jdbcType="BIGINT" property="administrativeClassroomId" />
    <result column="administrative_class_name" jdbcType="VARCHAR" property="administrativeClassName" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="master_id" jdbcType="INTEGER" property="masterId" />
    <result column="classroom_id" jdbcType="INTEGER" property="classroomId" />
    <result column="student_count" jdbcType="INTEGER" property="studentCount" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    administrative_classroom_id, administrative_class_name, grade, master_id, classroom_id, 
    student_count, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.goclass.pojo.AdministrativeclassExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_administrative_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_administrative_class
    where administrative_classroom_id = #{administrativeClassroomId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_administrative_class
    where administrative_classroom_id = #{administrativeClassroomId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.goclass.pojo.AdministrativeclassExample">
    delete from tb_administrative_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goclass.pojo.Administrativeclass">
    insert into tb_administrative_class (administrative_classroom_id, administrative_class_name, 
      grade, master_id, classroom_id, 
      student_count, gmt_create, gmt_modified
      )
    values (#{administrativeClassroomId,jdbcType=BIGINT}, #{administrativeClassName,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR}, #{masterId,jdbcType=INTEGER}, #{classroomId,jdbcType=INTEGER}, 
      #{studentCount,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.goclass.pojo.Administrativeclass">
    insert into tb_administrative_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="administrativeClassroomId != null">
        administrative_classroom_id,
      </if>
      <if test="administrativeClassName != null">
        administrative_class_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="masterId != null">
        master_id,
      </if>
      <if test="classroomId != null">
        classroom_id,
      </if>
      <if test="studentCount != null">
        student_count,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="administrativeClassroomId != null">
        #{administrativeClassroomId,jdbcType=BIGINT},
      </if>
      <if test="administrativeClassName != null">
        #{administrativeClassName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="masterId != null">
        #{masterId,jdbcType=INTEGER},
      </if>
      <if test="classroomId != null">
        #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="studentCount != null">
        #{studentCount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goclass.pojo.AdministrativeclassExample" resultType="java.lang.Long">
    select count(*) from tb_administrative_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_administrative_class
    <set>
      <if test="record.administrativeClassroomId != null">
        administrative_classroom_id = #{record.administrativeClassroomId,jdbcType=BIGINT},
      </if>
      <if test="record.administrativeClassName != null">
        administrative_class_name = #{record.administrativeClassName,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.masterId != null">
        master_id = #{record.masterId,jdbcType=INTEGER},
      </if>
      <if test="record.classroomId != null">
        classroom_id = #{record.classroomId,jdbcType=INTEGER},
      </if>
      <if test="record.studentCount != null">
        student_count = #{record.studentCount,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_administrative_class
    set administrative_classroom_id = #{record.administrativeClassroomId,jdbcType=BIGINT},
      administrative_class_name = #{record.administrativeClassName,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      master_id = #{record.masterId,jdbcType=INTEGER},
      classroom_id = #{record.classroomId,jdbcType=INTEGER},
      student_count = #{record.studentCount,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goclass.pojo.Administrativeclass">
    update tb_administrative_class
    <set>
      <if test="administrativeClassName != null">
        administrative_class_name = #{administrativeClassName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="masterId != null">
        master_id = #{masterId,jdbcType=INTEGER},
      </if>
      <if test="classroomId != null">
        classroom_id = #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="studentCount != null">
        student_count = #{studentCount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where administrative_classroom_id = #{administrativeClassroomId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goclass.pojo.Administrativeclass">
    update tb_administrative_class
    set administrative_class_name = #{administrativeClassName,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      master_id = #{masterId,jdbcType=INTEGER},
      classroom_id = #{classroomId,jdbcType=INTEGER},
      student_count = #{studentCount,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where administrative_classroom_id = #{administrativeClassroomId,jdbcType=BIGINT}
  </update>
</mapper>