<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goclass.mapper.GradesubjectMapper">
  <resultMap id="BaseResultMap" type="com.goclass.pojo.Gradesubject">
    <id column="relationship_id" jdbcType="BIGINT" property="relationshipId" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="grade_teacher_count" jdbcType="INTEGER" property="gradeTeacherCount" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="grade_student_count" jdbcType="INTEGER" property="gradeStudentCount" />
    <result column="period_per_week" jdbcType="INTEGER" property="periodPerWeek" />
    <result column="subject_master_name" jdbcType="VARCHAR" property="subjectMasterName" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    relationship_id, grade_id, grade_teacher_count, course_id, course_name, grade_student_count, 
    period_per_week, subject_master_name, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.goclass.pojo.GradesubjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_grade_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_grade_subject
    where relationship_id = #{relationshipId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_grade_subject
    where relationship_id = #{relationshipId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.goclass.pojo.GradesubjectExample">
    delete from tb_grade_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goclass.pojo.Gradesubject">
    insert into tb_grade_subject (relationship_id, grade_id, grade_teacher_count, 
      course_id, course_name, grade_student_count, 
      period_per_week, subject_master_name, gmt_create, 
      gmt_modified)
    values (#{relationshipId,jdbcType=BIGINT}, #{gradeId,jdbcType=INTEGER}, #{gradeTeacherCount,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{gradeStudentCount,jdbcType=INTEGER}, 
      #{periodPerWeek,jdbcType=INTEGER}, #{subjectMasterName,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.goclass.pojo.Gradesubject">
    insert into tb_grade_subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationshipId != null">
        relationship_id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="gradeTeacherCount != null">
        grade_teacher_count,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="gradeStudentCount != null">
        grade_student_count,
      </if>
      <if test="periodPerWeek != null">
        period_per_week,
      </if>
      <if test="subjectMasterName != null">
        subject_master_name,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationshipId != null">
        #{relationshipId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="gradeTeacherCount != null">
        #{gradeTeacherCount,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="gradeStudentCount != null">
        #{gradeStudentCount,jdbcType=INTEGER},
      </if>
      <if test="periodPerWeek != null">
        #{periodPerWeek,jdbcType=INTEGER},
      </if>
      <if test="subjectMasterName != null">
        #{subjectMasterName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goclass.pojo.GradesubjectExample" resultType="java.lang.Long">
    select count(*) from tb_grade_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_grade_subject
    <set>
      <if test="record.relationshipId != null">
        relationship_id = #{record.relationshipId,jdbcType=BIGINT},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeTeacherCount != null">
        grade_teacher_count = #{record.gradeTeacherCount,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeStudentCount != null">
        grade_student_count = #{record.gradeStudentCount,jdbcType=INTEGER},
      </if>
      <if test="record.periodPerWeek != null">
        period_per_week = #{record.periodPerWeek,jdbcType=INTEGER},
      </if>
      <if test="record.subjectMasterName != null">
        subject_master_name = #{record.subjectMasterName,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_grade_subject
    set relationship_id = #{record.relationshipId,jdbcType=BIGINT},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      grade_teacher_count = #{record.gradeTeacherCount,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      grade_student_count = #{record.gradeStudentCount,jdbcType=INTEGER},
      period_per_week = #{record.periodPerWeek,jdbcType=INTEGER},
      subject_master_name = #{record.subjectMasterName,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goclass.pojo.Gradesubject">
    update tb_grade_subject
    <set>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="gradeTeacherCount != null">
        grade_teacher_count = #{gradeTeacherCount,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="gradeStudentCount != null">
        grade_student_count = #{gradeStudentCount,jdbcType=INTEGER},
      </if>
      <if test="periodPerWeek != null">
        period_per_week = #{periodPerWeek,jdbcType=INTEGER},
      </if>
      <if test="subjectMasterName != null">
        subject_master_name = #{subjectMasterName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where relationship_id = #{relationshipId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goclass.pojo.Gradesubject">
    update tb_grade_subject
    set grade_id = #{gradeId,jdbcType=INTEGER},
      grade_teacher_count = #{gradeTeacherCount,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      grade_student_count = #{gradeStudentCount,jdbcType=INTEGER},
      period_per_week = #{periodPerWeek,jdbcType=INTEGER},
      subject_master_name = #{subjectMasterName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where relationship_id = #{relationshipId,jdbcType=BIGINT}
  </update>
</mapper>