/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package goclass.rpc.server.source;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-11-07")
public class ResultOfClassScheduleGetTaskResult implements org.apache.thrift.TBase<ResultOfClassScheduleGetTaskResult, ResultOfClassScheduleGetTaskResult._Fields>, java.io.Serializable, Cloneable, Comparable<ResultOfClassScheduleGetTaskResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ResultOfClassScheduleGetTaskResult");

  private static final org.apache.thrift.protocol.TField STATUS_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("statusCode", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("message", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TASK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("taskId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField STAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("stage", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField STAGE_ONE_RESULT_OF_CLASS_SCHEDULE_FIELD_DESC = new org.apache.thrift.protocol.TField("StageOneResultOfClassSchedule", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField STAGE_TWO_RESULT_OF_CLASS_SCHEDULE_FIELD_DESC = new org.apache.thrift.protocol.TField("StageTwoResultOfClassSchedule", org.apache.thrift.protocol.TType.STRUCT, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ResultOfClassScheduleGetTaskResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ResultOfClassScheduleGetTaskResultTupleSchemeFactory();

  public int statusCode; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String message; // required
  public int taskId; // required
  public int stage; // required
  public int status; // required
  public @org.apache.thrift.annotation.Nullable StageOneResultOfClassSchedule StageOneResultOfClassSchedule; // required
  public @org.apache.thrift.annotation.Nullable StageTwoResultOfClassSchedule StageTwoResultOfClassSchedule; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    STATUS_CODE((short)1, "statusCode"),
    MESSAGE((short)2, "message"),
    TASK_ID((short)3, "taskId"),
    STAGE((short)4, "stage"),
    STATUS((short)5, "status"),
    STAGE_ONE_RESULT_OF_CLASS_SCHEDULE((short)6, "StageOneResultOfClassSchedule"),
    STAGE_TWO_RESULT_OF_CLASS_SCHEDULE((short)7, "StageTwoResultOfClassSchedule");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STATUS_CODE
          return STATUS_CODE;
        case 2: // MESSAGE
          return MESSAGE;
        case 3: // TASK_ID
          return TASK_ID;
        case 4: // STAGE
          return STAGE;
        case 5: // STATUS
          return STATUS;
        case 6: // STAGE_ONE_RESULT_OF_CLASS_SCHEDULE
          return STAGE_ONE_RESULT_OF_CLASS_SCHEDULE;
        case 7: // STAGE_TWO_RESULT_OF_CLASS_SCHEDULE
          return STAGE_TWO_RESULT_OF_CLASS_SCHEDULE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STATUSCODE_ISSET_ID = 0;
  private static final int __TASKID_ISSET_ID = 1;
  private static final int __STAGE_ISSET_ID = 2;
  private static final int __STATUS_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STATUS_CODE, new org.apache.thrift.meta_data.FieldMetaData("statusCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("message", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TASK_ID, new org.apache.thrift.meta_data.FieldMetaData("taskId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STAGE, new org.apache.thrift.meta_data.FieldMetaData("stage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STAGE_ONE_RESULT_OF_CLASS_SCHEDULE, new org.apache.thrift.meta_data.FieldMetaData("StageOneResultOfClassSchedule", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StageOneResultOfClassSchedule.class)));
    tmpMap.put(_Fields.STAGE_TWO_RESULT_OF_CLASS_SCHEDULE, new org.apache.thrift.meta_data.FieldMetaData("StageTwoResultOfClassSchedule", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StageTwoResultOfClassSchedule.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ResultOfClassScheduleGetTaskResult.class, metaDataMap);
  }

  public ResultOfClassScheduleGetTaskResult() {
  }

  public ResultOfClassScheduleGetTaskResult(
    int statusCode,
    java.lang.String message,
    int taskId,
    int stage,
    int status,
    StageOneResultOfClassSchedule StageOneResultOfClassSchedule,
    StageTwoResultOfClassSchedule StageTwoResultOfClassSchedule)
  {
    this();
    this.statusCode = statusCode;
    setStatusCodeIsSet(true);
    this.message = message;
    this.taskId = taskId;
    setTaskIdIsSet(true);
    this.stage = stage;
    setStageIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.StageOneResultOfClassSchedule = StageOneResultOfClassSchedule;
    this.StageTwoResultOfClassSchedule = StageTwoResultOfClassSchedule;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ResultOfClassScheduleGetTaskResult(ResultOfClassScheduleGetTaskResult other) {
    __isset_bitfield = other.__isset_bitfield;
    this.statusCode = other.statusCode;
    if (other.isSetMessage()) {
      this.message = other.message;
    }
    this.taskId = other.taskId;
    this.stage = other.stage;
    this.status = other.status;
    if (other.isSetStageOneResultOfClassSchedule()) {
      this.StageOneResultOfClassSchedule = new StageOneResultOfClassSchedule(other.StageOneResultOfClassSchedule);
    }
    if (other.isSetStageTwoResultOfClassSchedule()) {
      this.StageTwoResultOfClassSchedule = new StageTwoResultOfClassSchedule(other.StageTwoResultOfClassSchedule);
    }
  }

  public ResultOfClassScheduleGetTaskResult deepCopy() {
    return new ResultOfClassScheduleGetTaskResult(this);
  }

  @Override
  public void clear() {
    setStatusCodeIsSet(false);
    this.statusCode = 0;
    this.message = null;
    setTaskIdIsSet(false);
    this.taskId = 0;
    setStageIsSet(false);
    this.stage = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.StageOneResultOfClassSchedule = null;
    this.StageTwoResultOfClassSchedule = null;
  }

  public int getStatusCode() {
    return this.statusCode;
  }

  public ResultOfClassScheduleGetTaskResult setStatusCode(int statusCode) {
    this.statusCode = statusCode;
    setStatusCodeIsSet(true);
    return this;
  }

  public void unsetStatusCode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUSCODE_ISSET_ID);
  }

  /** Returns true if field statusCode is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusCode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUSCODE_ISSET_ID);
  }

  public void setStatusCodeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUSCODE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMessage() {
    return this.message;
  }

  public ResultOfClassScheduleGetTaskResult setMessage(@org.apache.thrift.annotation.Nullable java.lang.String message) {
    this.message = message;
    return this;
  }

  public void unsetMessage() {
    this.message = null;
  }

  /** Returns true if field message is set (has been assigned a value) and false otherwise */
  public boolean isSetMessage() {
    return this.message != null;
  }

  public void setMessageIsSet(boolean value) {
    if (!value) {
      this.message = null;
    }
  }

  public int getTaskId() {
    return this.taskId;
  }

  public ResultOfClassScheduleGetTaskResult setTaskId(int taskId) {
    this.taskId = taskId;
    setTaskIdIsSet(true);
    return this;
  }

  public void unsetTaskId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TASKID_ISSET_ID);
  }

  /** Returns true if field taskId is set (has been assigned a value) and false otherwise */
  public boolean isSetTaskId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TASKID_ISSET_ID);
  }

  public void setTaskIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TASKID_ISSET_ID, value);
  }

  public int getStage() {
    return this.stage;
  }

  public ResultOfClassScheduleGetTaskResult setStage(int stage) {
    this.stage = stage;
    setStageIsSet(true);
    return this;
  }

  public void unsetStage() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STAGE_ISSET_ID);
  }

  /** Returns true if field stage is set (has been assigned a value) and false otherwise */
  public boolean isSetStage() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STAGE_ISSET_ID);
  }

  public void setStageIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STAGE_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public ResultOfClassScheduleGetTaskResult setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public StageOneResultOfClassSchedule getStageOneResultOfClassSchedule() {
    return this.StageOneResultOfClassSchedule;
  }

  public ResultOfClassScheduleGetTaskResult setStageOneResultOfClassSchedule(@org.apache.thrift.annotation.Nullable StageOneResultOfClassSchedule StageOneResultOfClassSchedule) {
    this.StageOneResultOfClassSchedule = StageOneResultOfClassSchedule;
    return this;
  }

  public void unsetStageOneResultOfClassSchedule() {
    this.StageOneResultOfClassSchedule = null;
  }

  /** Returns true if field StageOneResultOfClassSchedule is set (has been assigned a value) and false otherwise */
  public boolean isSetStageOneResultOfClassSchedule() {
    return this.StageOneResultOfClassSchedule != null;
  }

  public void setStageOneResultOfClassScheduleIsSet(boolean value) {
    if (!value) {
      this.StageOneResultOfClassSchedule = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public StageTwoResultOfClassSchedule getStageTwoResultOfClassSchedule() {
    return this.StageTwoResultOfClassSchedule;
  }

  public ResultOfClassScheduleGetTaskResult setStageTwoResultOfClassSchedule(@org.apache.thrift.annotation.Nullable StageTwoResultOfClassSchedule StageTwoResultOfClassSchedule) {
    this.StageTwoResultOfClassSchedule = StageTwoResultOfClassSchedule;
    return this;
  }

  public void unsetStageTwoResultOfClassSchedule() {
    this.StageTwoResultOfClassSchedule = null;
  }

  /** Returns true if field StageTwoResultOfClassSchedule is set (has been assigned a value) and false otherwise */
  public boolean isSetStageTwoResultOfClassSchedule() {
    return this.StageTwoResultOfClassSchedule != null;
  }

  public void setStageTwoResultOfClassScheduleIsSet(boolean value) {
    if (!value) {
      this.StageTwoResultOfClassSchedule = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case STATUS_CODE:
      if (value == null) {
        unsetStatusCode();
      } else {
        setStatusCode((java.lang.Integer)value);
      }
      break;

    case MESSAGE:
      if (value == null) {
        unsetMessage();
      } else {
        setMessage((java.lang.String)value);
      }
      break;

    case TASK_ID:
      if (value == null) {
        unsetTaskId();
      } else {
        setTaskId((java.lang.Integer)value);
      }
      break;

    case STAGE:
      if (value == null) {
        unsetStage();
      } else {
        setStage((java.lang.Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Integer)value);
      }
      break;

    case STAGE_ONE_RESULT_OF_CLASS_SCHEDULE:
      if (value == null) {
        unsetStageOneResultOfClassSchedule();
      } else {
        setStageOneResultOfClassSchedule((StageOneResultOfClassSchedule)value);
      }
      break;

    case STAGE_TWO_RESULT_OF_CLASS_SCHEDULE:
      if (value == null) {
        unsetStageTwoResultOfClassSchedule();
      } else {
        setStageTwoResultOfClassSchedule((StageTwoResultOfClassSchedule)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case STATUS_CODE:
      return getStatusCode();

    case MESSAGE:
      return getMessage();

    case TASK_ID:
      return getTaskId();

    case STAGE:
      return getStage();

    case STATUS:
      return getStatus();

    case STAGE_ONE_RESULT_OF_CLASS_SCHEDULE:
      return getStageOneResultOfClassSchedule();

    case STAGE_TWO_RESULT_OF_CLASS_SCHEDULE:
      return getStageTwoResultOfClassSchedule();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case STATUS_CODE:
      return isSetStatusCode();
    case MESSAGE:
      return isSetMessage();
    case TASK_ID:
      return isSetTaskId();
    case STAGE:
      return isSetStage();
    case STATUS:
      return isSetStatus();
    case STAGE_ONE_RESULT_OF_CLASS_SCHEDULE:
      return isSetStageOneResultOfClassSchedule();
    case STAGE_TWO_RESULT_OF_CLASS_SCHEDULE:
      return isSetStageTwoResultOfClassSchedule();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ResultOfClassScheduleGetTaskResult)
      return this.equals((ResultOfClassScheduleGetTaskResult)that);
    return false;
  }

  public boolean equals(ResultOfClassScheduleGetTaskResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_statusCode = true;
    boolean that_present_statusCode = true;
    if (this_present_statusCode || that_present_statusCode) {
      if (!(this_present_statusCode && that_present_statusCode))
        return false;
      if (this.statusCode != that.statusCode)
        return false;
    }

    boolean this_present_message = true && this.isSetMessage();
    boolean that_present_message = true && that.isSetMessage();
    if (this_present_message || that_present_message) {
      if (!(this_present_message && that_present_message))
        return false;
      if (!this.message.equals(that.message))
        return false;
    }

    boolean this_present_taskId = true;
    boolean that_present_taskId = true;
    if (this_present_taskId || that_present_taskId) {
      if (!(this_present_taskId && that_present_taskId))
        return false;
      if (this.taskId != that.taskId)
        return false;
    }

    boolean this_present_stage = true;
    boolean that_present_stage = true;
    if (this_present_stage || that_present_stage) {
      if (!(this_present_stage && that_present_stage))
        return false;
      if (this.stage != that.stage)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_StageOneResultOfClassSchedule = true && this.isSetStageOneResultOfClassSchedule();
    boolean that_present_StageOneResultOfClassSchedule = true && that.isSetStageOneResultOfClassSchedule();
    if (this_present_StageOneResultOfClassSchedule || that_present_StageOneResultOfClassSchedule) {
      if (!(this_present_StageOneResultOfClassSchedule && that_present_StageOneResultOfClassSchedule))
        return false;
      if (!this.StageOneResultOfClassSchedule.equals(that.StageOneResultOfClassSchedule))
        return false;
    }

    boolean this_present_StageTwoResultOfClassSchedule = true && this.isSetStageTwoResultOfClassSchedule();
    boolean that_present_StageTwoResultOfClassSchedule = true && that.isSetStageTwoResultOfClassSchedule();
    if (this_present_StageTwoResultOfClassSchedule || that_present_StageTwoResultOfClassSchedule) {
      if (!(this_present_StageTwoResultOfClassSchedule && that_present_StageTwoResultOfClassSchedule))
        return false;
      if (!this.StageTwoResultOfClassSchedule.equals(that.StageTwoResultOfClassSchedule))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + statusCode;

    hashCode = hashCode * 8191 + ((isSetMessage()) ? 131071 : 524287);
    if (isSetMessage())
      hashCode = hashCode * 8191 + message.hashCode();

    hashCode = hashCode * 8191 + taskId;

    hashCode = hashCode * 8191 + stage;

    hashCode = hashCode * 8191 + status;

    hashCode = hashCode * 8191 + ((isSetStageOneResultOfClassSchedule()) ? 131071 : 524287);
    if (isSetStageOneResultOfClassSchedule())
      hashCode = hashCode * 8191 + StageOneResultOfClassSchedule.hashCode();

    hashCode = hashCode * 8191 + ((isSetStageTwoResultOfClassSchedule()) ? 131071 : 524287);
    if (isSetStageTwoResultOfClassSchedule())
      hashCode = hashCode * 8191 + StageTwoResultOfClassSchedule.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ResultOfClassScheduleGetTaskResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetStatusCode()).compareTo(other.isSetStatusCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusCode, other.statusCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessage()).compareTo(other.isSetMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.message, other.message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTaskId()).compareTo(other.isSetTaskId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaskId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.taskId, other.taskId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStage()).compareTo(other.isSetStage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stage, other.stage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStageOneResultOfClassSchedule()).compareTo(other.isSetStageOneResultOfClassSchedule());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStageOneResultOfClassSchedule()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.StageOneResultOfClassSchedule, other.StageOneResultOfClassSchedule);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStageTwoResultOfClassSchedule()).compareTo(other.isSetStageTwoResultOfClassSchedule());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStageTwoResultOfClassSchedule()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.StageTwoResultOfClassSchedule, other.StageTwoResultOfClassSchedule);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ResultOfClassScheduleGetTaskResult(");
    boolean first = true;

    sb.append("statusCode:");
    sb.append(this.statusCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("message:");
    if (this.message == null) {
      sb.append("null");
    } else {
      sb.append(this.message);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("taskId:");
    sb.append(this.taskId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("stage:");
    sb.append(this.stage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("StageOneResultOfClassSchedule:");
    if (this.StageOneResultOfClassSchedule == null) {
      sb.append("null");
    } else {
      sb.append(this.StageOneResultOfClassSchedule);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("StageTwoResultOfClassSchedule:");
    if (this.StageTwoResultOfClassSchedule == null) {
      sb.append("null");
    } else {
      sb.append(this.StageTwoResultOfClassSchedule);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (StageOneResultOfClassSchedule != null) {
      StageOneResultOfClassSchedule.validate();
    }
    if (StageTwoResultOfClassSchedule != null) {
      StageTwoResultOfClassSchedule.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ResultOfClassScheduleGetTaskResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ResultOfClassScheduleGetTaskResultStandardScheme getScheme() {
      return new ResultOfClassScheduleGetTaskResultStandardScheme();
    }
  }

  private static class ResultOfClassScheduleGetTaskResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<ResultOfClassScheduleGetTaskResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ResultOfClassScheduleGetTaskResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STATUS_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.statusCode = iprot.readI32();
              struct.setStatusCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.message = iprot.readString();
              struct.setMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TASK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.taskId = iprot.readI32();
              struct.setTaskIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.stage = iprot.readI32();
              struct.setStageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STAGE_ONE_RESULT_OF_CLASS_SCHEDULE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.StageOneResultOfClassSchedule = new StageOneResultOfClassSchedule();
              struct.StageOneResultOfClassSchedule.read(iprot);
              struct.setStageOneResultOfClassScheduleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STAGE_TWO_RESULT_OF_CLASS_SCHEDULE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.StageTwoResultOfClassSchedule = new StageTwoResultOfClassSchedule();
              struct.StageTwoResultOfClassSchedule.read(iprot);
              struct.setStageTwoResultOfClassScheduleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ResultOfClassScheduleGetTaskResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(STATUS_CODE_FIELD_DESC);
      oprot.writeI32(struct.statusCode);
      oprot.writeFieldEnd();
      if (struct.message != null) {
        oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
        oprot.writeString(struct.message);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TASK_ID_FIELD_DESC);
      oprot.writeI32(struct.taskId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STAGE_FIELD_DESC);
      oprot.writeI32(struct.stage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.StageOneResultOfClassSchedule != null) {
        oprot.writeFieldBegin(STAGE_ONE_RESULT_OF_CLASS_SCHEDULE_FIELD_DESC);
        struct.StageOneResultOfClassSchedule.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.StageTwoResultOfClassSchedule != null) {
        oprot.writeFieldBegin(STAGE_TWO_RESULT_OF_CLASS_SCHEDULE_FIELD_DESC);
        struct.StageTwoResultOfClassSchedule.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ResultOfClassScheduleGetTaskResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ResultOfClassScheduleGetTaskResultTupleScheme getScheme() {
      return new ResultOfClassScheduleGetTaskResultTupleScheme();
    }
  }

  private static class ResultOfClassScheduleGetTaskResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<ResultOfClassScheduleGetTaskResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ResultOfClassScheduleGetTaskResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStatusCode()) {
        optionals.set(0);
      }
      if (struct.isSetMessage()) {
        optionals.set(1);
      }
      if (struct.isSetTaskId()) {
        optionals.set(2);
      }
      if (struct.isSetStage()) {
        optionals.set(3);
      }
      if (struct.isSetStatus()) {
        optionals.set(4);
      }
      if (struct.isSetStageOneResultOfClassSchedule()) {
        optionals.set(5);
      }
      if (struct.isSetStageTwoResultOfClassSchedule()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetStatusCode()) {
        oprot.writeI32(struct.statusCode);
      }
      if (struct.isSetMessage()) {
        oprot.writeString(struct.message);
      }
      if (struct.isSetTaskId()) {
        oprot.writeI32(struct.taskId);
      }
      if (struct.isSetStage()) {
        oprot.writeI32(struct.stage);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetStageOneResultOfClassSchedule()) {
        struct.StageOneResultOfClassSchedule.write(oprot);
      }
      if (struct.isSetStageTwoResultOfClassSchedule()) {
        struct.StageTwoResultOfClassSchedule.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ResultOfClassScheduleGetTaskResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.statusCode = iprot.readI32();
        struct.setStatusCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.message = iprot.readString();
        struct.setMessageIsSet(true);
      }
      if (incoming.get(2)) {
        struct.taskId = iprot.readI32();
        struct.setTaskIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.stage = iprot.readI32();
        struct.setStageIsSet(true);
      }
      if (incoming.get(4)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(5)) {
        struct.StageOneResultOfClassSchedule = new StageOneResultOfClassSchedule();
        struct.StageOneResultOfClassSchedule.read(iprot);
        struct.setStageOneResultOfClassScheduleIsSet(true);
      }
      if (incoming.get(6)) {
        struct.StageTwoResultOfClassSchedule = new StageTwoResultOfClassSchedule();
        struct.StageTwoResultOfClassSchedule.read(iprot);
        struct.setStageTwoResultOfClassScheduleIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

