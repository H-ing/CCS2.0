/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package goclass.rpc.server.source;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-11-07")
public class StageOneResultOfClassSchedule implements org.apache.thrift.TBase<StageOneResultOfClassSchedule, StageOneResultOfClassSchedule._Fields>, java.io.Serializable, Cloneable, Comparable<StageOneResultOfClassSchedule> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StageOneResultOfClassSchedule");

  private static final org.apache.thrift.protocol.TField DAYS_MIXTEACHINGCLASS_POOL_FIELD_DESC = new org.apache.thrift.protocol.TField("daysMixteachingclassPool", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("daysMixteachingclassSessionNumberList", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField DAYS_TEACHER_SESSION_NUMBER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("daysTeacherSessionNumberList", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField DAYS_ADMINCLASS_SESSION_NUMBER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("daysAdminclassSessionNumberList", org.apache.thrift.protocol.TType.LIST, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new StageOneResultOfClassScheduleStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new StageOneResultOfClassScheduleTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> daysMixteachingclassPool; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysMixteachingclassSessionNumberList; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysTeacherSessionNumberList; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysAdminclassSessionNumberList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DAYS_MIXTEACHINGCLASS_POOL((short)4, "daysMixteachingclassPool"),
    DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST((short)5, "daysMixteachingclassSessionNumberList"),
    DAYS_TEACHER_SESSION_NUMBER_LIST((short)6, "daysTeacherSessionNumberList"),
    DAYS_ADMINCLASS_SESSION_NUMBER_LIST((short)7, "daysAdminclassSessionNumberList");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 4: // DAYS_MIXTEACHINGCLASS_POOL
          return DAYS_MIXTEACHINGCLASS_POOL;
        case 5: // DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST
          return DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST;
        case 6: // DAYS_TEACHER_SESSION_NUMBER_LIST
          return DAYS_TEACHER_SESSION_NUMBER_LIST;
        case 7: // DAYS_ADMINCLASS_SESSION_NUMBER_LIST
          return DAYS_ADMINCLASS_SESSION_NUMBER_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DAYS_MIXTEACHINGCLASS_POOL, new org.apache.thrift.meta_data.FieldMetaData("daysMixteachingclassPool", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)))));
    tmpMap.put(_Fields.DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST, new org.apache.thrift.meta_data.FieldMetaData("daysMixteachingclassSessionNumberList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)))));
    tmpMap.put(_Fields.DAYS_TEACHER_SESSION_NUMBER_LIST, new org.apache.thrift.meta_data.FieldMetaData("daysTeacherSessionNumberList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)))));
    tmpMap.put(_Fields.DAYS_ADMINCLASS_SESSION_NUMBER_LIST, new org.apache.thrift.meta_data.FieldMetaData("daysAdminclassSessionNumberList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StageOneResultOfClassSchedule.class, metaDataMap);
  }

  public StageOneResultOfClassSchedule() {
  }

  public StageOneResultOfClassSchedule(
    java.util.List<java.util.List<java.lang.Integer>> daysMixteachingclassPool,
    java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysMixteachingclassSessionNumberList,
    java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysTeacherSessionNumberList,
    java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysAdminclassSessionNumberList)
  {
    this();
    this.daysMixteachingclassPool = daysMixteachingclassPool;
    this.daysMixteachingclassSessionNumberList = daysMixteachingclassSessionNumberList;
    this.daysTeacherSessionNumberList = daysTeacherSessionNumberList;
    this.daysAdminclassSessionNumberList = daysAdminclassSessionNumberList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StageOneResultOfClassSchedule(StageOneResultOfClassSchedule other) {
    if (other.isSetDaysMixteachingclassPool()) {
      java.util.List<java.util.List<java.lang.Integer>> __this__daysMixteachingclassPool = new java.util.ArrayList<java.util.List<java.lang.Integer>>(other.daysMixteachingclassPool.size());
      for (java.util.List<java.lang.Integer> other_element : other.daysMixteachingclassPool) {
        java.util.List<java.lang.Integer> __this__daysMixteachingclassPool_copy = new java.util.ArrayList<java.lang.Integer>(other_element);
        __this__daysMixteachingclassPool.add(__this__daysMixteachingclassPool_copy);
      }
      this.daysMixteachingclassPool = __this__daysMixteachingclassPool;
    }
    if (other.isSetDaysMixteachingclassSessionNumberList()) {
      java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> __this__daysMixteachingclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(other.daysMixteachingclassSessionNumberList.size());
      for (java.util.Map<java.lang.Integer,java.lang.Integer> other_element : other.daysMixteachingclassSessionNumberList) {
        java.util.Map<java.lang.Integer,java.lang.Integer> __this__daysMixteachingclassSessionNumberList_copy = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(other_element);
        __this__daysMixteachingclassSessionNumberList.add(__this__daysMixteachingclassSessionNumberList_copy);
      }
      this.daysMixteachingclassSessionNumberList = __this__daysMixteachingclassSessionNumberList;
    }
    if (other.isSetDaysTeacherSessionNumberList()) {
      java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> __this__daysTeacherSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(other.daysTeacherSessionNumberList.size());
      for (java.util.Map<java.lang.Integer,java.lang.Integer> other_element : other.daysTeacherSessionNumberList) {
        java.util.Map<java.lang.Integer,java.lang.Integer> __this__daysTeacherSessionNumberList_copy = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(other_element);
        __this__daysTeacherSessionNumberList.add(__this__daysTeacherSessionNumberList_copy);
      }
      this.daysTeacherSessionNumberList = __this__daysTeacherSessionNumberList;
    }
    if (other.isSetDaysAdminclassSessionNumberList()) {
      java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> __this__daysAdminclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(other.daysAdminclassSessionNumberList.size());
      for (java.util.Map<java.lang.Integer,java.lang.Integer> other_element : other.daysAdminclassSessionNumberList) {
        java.util.Map<java.lang.Integer,java.lang.Integer> __this__daysAdminclassSessionNumberList_copy = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(other_element);
        __this__daysAdminclassSessionNumberList.add(__this__daysAdminclassSessionNumberList_copy);
      }
      this.daysAdminclassSessionNumberList = __this__daysAdminclassSessionNumberList;
    }
  }

  public StageOneResultOfClassSchedule deepCopy() {
    return new StageOneResultOfClassSchedule(this);
  }

  @Override
  public void clear() {
    this.daysMixteachingclassPool = null;
    this.daysMixteachingclassSessionNumberList = null;
    this.daysTeacherSessionNumberList = null;
    this.daysAdminclassSessionNumberList = null;
  }

  public int getDaysMixteachingclassPoolSize() {
    return (this.daysMixteachingclassPool == null) ? 0 : this.daysMixteachingclassPool.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.Integer>> getDaysMixteachingclassPoolIterator() {
    return (this.daysMixteachingclassPool == null) ? null : this.daysMixteachingclassPool.iterator();
  }

  public void addToDaysMixteachingclassPool(java.util.List<java.lang.Integer> elem) {
    if (this.daysMixteachingclassPool == null) {
      this.daysMixteachingclassPool = new java.util.ArrayList<java.util.List<java.lang.Integer>>();
    }
    this.daysMixteachingclassPool.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.Integer>> getDaysMixteachingclassPool() {
    return this.daysMixteachingclassPool;
  }

  public StageOneResultOfClassSchedule setDaysMixteachingclassPool(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> daysMixteachingclassPool) {
    this.daysMixteachingclassPool = daysMixteachingclassPool;
    return this;
  }

  public void unsetDaysMixteachingclassPool() {
    this.daysMixteachingclassPool = null;
  }

  /** Returns true if field daysMixteachingclassPool is set (has been assigned a value) and false otherwise */
  public boolean isSetDaysMixteachingclassPool() {
    return this.daysMixteachingclassPool != null;
  }

  public void setDaysMixteachingclassPoolIsSet(boolean value) {
    if (!value) {
      this.daysMixteachingclassPool = null;
    }
  }

  public int getDaysMixteachingclassSessionNumberListSize() {
    return (this.daysMixteachingclassSessionNumberList == null) ? 0 : this.daysMixteachingclassSessionNumberList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.Map<java.lang.Integer,java.lang.Integer>> getDaysMixteachingclassSessionNumberListIterator() {
    return (this.daysMixteachingclassSessionNumberList == null) ? null : this.daysMixteachingclassSessionNumberList.iterator();
  }

  public void addToDaysMixteachingclassSessionNumberList(java.util.Map<java.lang.Integer,java.lang.Integer> elem) {
    if (this.daysMixteachingclassSessionNumberList == null) {
      this.daysMixteachingclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>();
    }
    this.daysMixteachingclassSessionNumberList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> getDaysMixteachingclassSessionNumberList() {
    return this.daysMixteachingclassSessionNumberList;
  }

  public StageOneResultOfClassSchedule setDaysMixteachingclassSessionNumberList(@org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysMixteachingclassSessionNumberList) {
    this.daysMixteachingclassSessionNumberList = daysMixteachingclassSessionNumberList;
    return this;
  }

  public void unsetDaysMixteachingclassSessionNumberList() {
    this.daysMixteachingclassSessionNumberList = null;
  }

  /** Returns true if field daysMixteachingclassSessionNumberList is set (has been assigned a value) and false otherwise */
  public boolean isSetDaysMixteachingclassSessionNumberList() {
    return this.daysMixteachingclassSessionNumberList != null;
  }

  public void setDaysMixteachingclassSessionNumberListIsSet(boolean value) {
    if (!value) {
      this.daysMixteachingclassSessionNumberList = null;
    }
  }

  public int getDaysTeacherSessionNumberListSize() {
    return (this.daysTeacherSessionNumberList == null) ? 0 : this.daysTeacherSessionNumberList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.Map<java.lang.Integer,java.lang.Integer>> getDaysTeacherSessionNumberListIterator() {
    return (this.daysTeacherSessionNumberList == null) ? null : this.daysTeacherSessionNumberList.iterator();
  }

  public void addToDaysTeacherSessionNumberList(java.util.Map<java.lang.Integer,java.lang.Integer> elem) {
    if (this.daysTeacherSessionNumberList == null) {
      this.daysTeacherSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>();
    }
    this.daysTeacherSessionNumberList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> getDaysTeacherSessionNumberList() {
    return this.daysTeacherSessionNumberList;
  }

  public StageOneResultOfClassSchedule setDaysTeacherSessionNumberList(@org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysTeacherSessionNumberList) {
    this.daysTeacherSessionNumberList = daysTeacherSessionNumberList;
    return this;
  }

  public void unsetDaysTeacherSessionNumberList() {
    this.daysTeacherSessionNumberList = null;
  }

  /** Returns true if field daysTeacherSessionNumberList is set (has been assigned a value) and false otherwise */
  public boolean isSetDaysTeacherSessionNumberList() {
    return this.daysTeacherSessionNumberList != null;
  }

  public void setDaysTeacherSessionNumberListIsSet(boolean value) {
    if (!value) {
      this.daysTeacherSessionNumberList = null;
    }
  }

  public int getDaysAdminclassSessionNumberListSize() {
    return (this.daysAdminclassSessionNumberList == null) ? 0 : this.daysAdminclassSessionNumberList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.Map<java.lang.Integer,java.lang.Integer>> getDaysAdminclassSessionNumberListIterator() {
    return (this.daysAdminclassSessionNumberList == null) ? null : this.daysAdminclassSessionNumberList.iterator();
  }

  public void addToDaysAdminclassSessionNumberList(java.util.Map<java.lang.Integer,java.lang.Integer> elem) {
    if (this.daysAdminclassSessionNumberList == null) {
      this.daysAdminclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>();
    }
    this.daysAdminclassSessionNumberList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> getDaysAdminclassSessionNumberList() {
    return this.daysAdminclassSessionNumberList;
  }

  public StageOneResultOfClassSchedule setDaysAdminclassSessionNumberList(@org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>> daysAdminclassSessionNumberList) {
    this.daysAdminclassSessionNumberList = daysAdminclassSessionNumberList;
    return this;
  }

  public void unsetDaysAdminclassSessionNumberList() {
    this.daysAdminclassSessionNumberList = null;
  }

  /** Returns true if field daysAdminclassSessionNumberList is set (has been assigned a value) and false otherwise */
  public boolean isSetDaysAdminclassSessionNumberList() {
    return this.daysAdminclassSessionNumberList != null;
  }

  public void setDaysAdminclassSessionNumberListIsSet(boolean value) {
    if (!value) {
      this.daysAdminclassSessionNumberList = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case DAYS_MIXTEACHINGCLASS_POOL:
      if (value == null) {
        unsetDaysMixteachingclassPool();
      } else {
        setDaysMixteachingclassPool((java.util.List<java.util.List<java.lang.Integer>>)value);
      }
      break;

    case DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST:
      if (value == null) {
        unsetDaysMixteachingclassSessionNumberList();
      } else {
        setDaysMixteachingclassSessionNumberList((java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>>)value);
      }
      break;

    case DAYS_TEACHER_SESSION_NUMBER_LIST:
      if (value == null) {
        unsetDaysTeacherSessionNumberList();
      } else {
        setDaysTeacherSessionNumberList((java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>>)value);
      }
      break;

    case DAYS_ADMINCLASS_SESSION_NUMBER_LIST:
      if (value == null) {
        unsetDaysAdminclassSessionNumberList();
      } else {
        setDaysAdminclassSessionNumberList((java.util.List<java.util.Map<java.lang.Integer,java.lang.Integer>>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DAYS_MIXTEACHINGCLASS_POOL:
      return getDaysMixteachingclassPool();

    case DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST:
      return getDaysMixteachingclassSessionNumberList();

    case DAYS_TEACHER_SESSION_NUMBER_LIST:
      return getDaysTeacherSessionNumberList();

    case DAYS_ADMINCLASS_SESSION_NUMBER_LIST:
      return getDaysAdminclassSessionNumberList();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DAYS_MIXTEACHINGCLASS_POOL:
      return isSetDaysMixteachingclassPool();
    case DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST:
      return isSetDaysMixteachingclassSessionNumberList();
    case DAYS_TEACHER_SESSION_NUMBER_LIST:
      return isSetDaysTeacherSessionNumberList();
    case DAYS_ADMINCLASS_SESSION_NUMBER_LIST:
      return isSetDaysAdminclassSessionNumberList();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof StageOneResultOfClassSchedule)
      return this.equals((StageOneResultOfClassSchedule)that);
    return false;
  }

  public boolean equals(StageOneResultOfClassSchedule that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_daysMixteachingclassPool = true && this.isSetDaysMixteachingclassPool();
    boolean that_present_daysMixteachingclassPool = true && that.isSetDaysMixteachingclassPool();
    if (this_present_daysMixteachingclassPool || that_present_daysMixteachingclassPool) {
      if (!(this_present_daysMixteachingclassPool && that_present_daysMixteachingclassPool))
        return false;
      if (!this.daysMixteachingclassPool.equals(that.daysMixteachingclassPool))
        return false;
    }

    boolean this_present_daysMixteachingclassSessionNumberList = true && this.isSetDaysMixteachingclassSessionNumberList();
    boolean that_present_daysMixteachingclassSessionNumberList = true && that.isSetDaysMixteachingclassSessionNumberList();
    if (this_present_daysMixteachingclassSessionNumberList || that_present_daysMixteachingclassSessionNumberList) {
      if (!(this_present_daysMixteachingclassSessionNumberList && that_present_daysMixteachingclassSessionNumberList))
        return false;
      if (!this.daysMixteachingclassSessionNumberList.equals(that.daysMixteachingclassSessionNumberList))
        return false;
    }

    boolean this_present_daysTeacherSessionNumberList = true && this.isSetDaysTeacherSessionNumberList();
    boolean that_present_daysTeacherSessionNumberList = true && that.isSetDaysTeacherSessionNumberList();
    if (this_present_daysTeacherSessionNumberList || that_present_daysTeacherSessionNumberList) {
      if (!(this_present_daysTeacherSessionNumberList && that_present_daysTeacherSessionNumberList))
        return false;
      if (!this.daysTeacherSessionNumberList.equals(that.daysTeacherSessionNumberList))
        return false;
    }

    boolean this_present_daysAdminclassSessionNumberList = true && this.isSetDaysAdminclassSessionNumberList();
    boolean that_present_daysAdminclassSessionNumberList = true && that.isSetDaysAdminclassSessionNumberList();
    if (this_present_daysAdminclassSessionNumberList || that_present_daysAdminclassSessionNumberList) {
      if (!(this_present_daysAdminclassSessionNumberList && that_present_daysAdminclassSessionNumberList))
        return false;
      if (!this.daysAdminclassSessionNumberList.equals(that.daysAdminclassSessionNumberList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetDaysMixteachingclassPool()) ? 131071 : 524287);
    if (isSetDaysMixteachingclassPool())
      hashCode = hashCode * 8191 + daysMixteachingclassPool.hashCode();

    hashCode = hashCode * 8191 + ((isSetDaysMixteachingclassSessionNumberList()) ? 131071 : 524287);
    if (isSetDaysMixteachingclassSessionNumberList())
      hashCode = hashCode * 8191 + daysMixteachingclassSessionNumberList.hashCode();

    hashCode = hashCode * 8191 + ((isSetDaysTeacherSessionNumberList()) ? 131071 : 524287);
    if (isSetDaysTeacherSessionNumberList())
      hashCode = hashCode * 8191 + daysTeacherSessionNumberList.hashCode();

    hashCode = hashCode * 8191 + ((isSetDaysAdminclassSessionNumberList()) ? 131071 : 524287);
    if (isSetDaysAdminclassSessionNumberList())
      hashCode = hashCode * 8191 + daysAdminclassSessionNumberList.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(StageOneResultOfClassSchedule other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetDaysMixteachingclassPool()).compareTo(other.isSetDaysMixteachingclassPool());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDaysMixteachingclassPool()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.daysMixteachingclassPool, other.daysMixteachingclassPool);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDaysMixteachingclassSessionNumberList()).compareTo(other.isSetDaysMixteachingclassSessionNumberList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDaysMixteachingclassSessionNumberList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.daysMixteachingclassSessionNumberList, other.daysMixteachingclassSessionNumberList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDaysTeacherSessionNumberList()).compareTo(other.isSetDaysTeacherSessionNumberList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDaysTeacherSessionNumberList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.daysTeacherSessionNumberList, other.daysTeacherSessionNumberList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDaysAdminclassSessionNumberList()).compareTo(other.isSetDaysAdminclassSessionNumberList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDaysAdminclassSessionNumberList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.daysAdminclassSessionNumberList, other.daysAdminclassSessionNumberList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("StageOneResultOfClassSchedule(");
    boolean first = true;

    sb.append("daysMixteachingclassPool:");
    if (this.daysMixteachingclassPool == null) {
      sb.append("null");
    } else {
      sb.append(this.daysMixteachingclassPool);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("daysMixteachingclassSessionNumberList:");
    if (this.daysMixteachingclassSessionNumberList == null) {
      sb.append("null");
    } else {
      sb.append(this.daysMixteachingclassSessionNumberList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("daysTeacherSessionNumberList:");
    if (this.daysTeacherSessionNumberList == null) {
      sb.append("null");
    } else {
      sb.append(this.daysTeacherSessionNumberList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("daysAdminclassSessionNumberList:");
    if (this.daysAdminclassSessionNumberList == null) {
      sb.append("null");
    } else {
      sb.append(this.daysAdminclassSessionNumberList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StageOneResultOfClassScheduleStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StageOneResultOfClassScheduleStandardScheme getScheme() {
      return new StageOneResultOfClassScheduleStandardScheme();
    }
  }

  private static class StageOneResultOfClassScheduleStandardScheme extends org.apache.thrift.scheme.StandardScheme<StageOneResultOfClassSchedule> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StageOneResultOfClassSchedule struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 4: // DAYS_MIXTEACHINGCLASS_POOL
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list760 = iprot.readListBegin();
                struct.daysMixteachingclassPool = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list760.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem761;
                for (int _i762 = 0; _i762 < _list760.size; ++_i762)
                {
                  {
                    org.apache.thrift.protocol.TList _list763 = iprot.readListBegin();
                    _elem761 = new java.util.ArrayList<java.lang.Integer>(_list763.size);
                    int _elem764;
                    for (int _i765 = 0; _i765 < _list763.size; ++_i765)
                    {
                      _elem764 = iprot.readI32();
                      _elem761.add(_elem764);
                    }
                    iprot.readListEnd();
                  }
                  struct.daysMixteachingclassPool.add(_elem761);
                }
                iprot.readListEnd();
              }
              struct.setDaysMixteachingclassPoolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list766 = iprot.readListBegin();
                struct.daysMixteachingclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(_list766.size);
                @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> _elem767;
                for (int _i768 = 0; _i768 < _list766.size; ++_i768)
                {
                  {
                    org.apache.thrift.protocol.TMap _map769 = iprot.readMapBegin();
                    _elem767 = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map769.size);
                    int _key770;
                    int _val771;
                    for (int _i772 = 0; _i772 < _map769.size; ++_i772)
                    {
                      _key770 = iprot.readI32();
                      _val771 = iprot.readI32();
                      _elem767.put(_key770, _val771);
                    }
                    iprot.readMapEnd();
                  }
                  struct.daysMixteachingclassSessionNumberList.add(_elem767);
                }
                iprot.readListEnd();
              }
              struct.setDaysMixteachingclassSessionNumberListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DAYS_TEACHER_SESSION_NUMBER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list773 = iprot.readListBegin();
                struct.daysTeacherSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(_list773.size);
                @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> _elem774;
                for (int _i775 = 0; _i775 < _list773.size; ++_i775)
                {
                  {
                    org.apache.thrift.protocol.TMap _map776 = iprot.readMapBegin();
                    _elem774 = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map776.size);
                    int _key777;
                    int _val778;
                    for (int _i779 = 0; _i779 < _map776.size; ++_i779)
                    {
                      _key777 = iprot.readI32();
                      _val778 = iprot.readI32();
                      _elem774.put(_key777, _val778);
                    }
                    iprot.readMapEnd();
                  }
                  struct.daysTeacherSessionNumberList.add(_elem774);
                }
                iprot.readListEnd();
              }
              struct.setDaysTeacherSessionNumberListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DAYS_ADMINCLASS_SESSION_NUMBER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list780 = iprot.readListBegin();
                struct.daysAdminclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(_list780.size);
                @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> _elem781;
                for (int _i782 = 0; _i782 < _list780.size; ++_i782)
                {
                  {
                    org.apache.thrift.protocol.TMap _map783 = iprot.readMapBegin();
                    _elem781 = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map783.size);
                    int _key784;
                    int _val785;
                    for (int _i786 = 0; _i786 < _map783.size; ++_i786)
                    {
                      _key784 = iprot.readI32();
                      _val785 = iprot.readI32();
                      _elem781.put(_key784, _val785);
                    }
                    iprot.readMapEnd();
                  }
                  struct.daysAdminclassSessionNumberList.add(_elem781);
                }
                iprot.readListEnd();
              }
              struct.setDaysAdminclassSessionNumberListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StageOneResultOfClassSchedule struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.daysMixteachingclassPool != null) {
        oprot.writeFieldBegin(DAYS_MIXTEACHINGCLASS_POOL_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.daysMixteachingclassPool.size()));
          for (java.util.List<java.lang.Integer> _iter787 : struct.daysMixteachingclassPool)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, _iter787.size()));
              for (int _iter788 : _iter787)
              {
                oprot.writeI32(_iter788);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.daysMixteachingclassSessionNumberList != null) {
        oprot.writeFieldBegin(DAYS_MIXTEACHINGCLASS_SESSION_NUMBER_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, struct.daysMixteachingclassSessionNumberList.size()));
          for (java.util.Map<java.lang.Integer,java.lang.Integer> _iter789 : struct.daysMixteachingclassSessionNumberList)
          {
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, _iter789.size()));
              for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter790 : _iter789.entrySet())
              {
                oprot.writeI32(_iter790.getKey());
                oprot.writeI32(_iter790.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.daysTeacherSessionNumberList != null) {
        oprot.writeFieldBegin(DAYS_TEACHER_SESSION_NUMBER_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, struct.daysTeacherSessionNumberList.size()));
          for (java.util.Map<java.lang.Integer,java.lang.Integer> _iter791 : struct.daysTeacherSessionNumberList)
          {
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, _iter791.size()));
              for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter792 : _iter791.entrySet())
              {
                oprot.writeI32(_iter792.getKey());
                oprot.writeI32(_iter792.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.daysAdminclassSessionNumberList != null) {
        oprot.writeFieldBegin(DAYS_ADMINCLASS_SESSION_NUMBER_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, struct.daysAdminclassSessionNumberList.size()));
          for (java.util.Map<java.lang.Integer,java.lang.Integer> _iter793 : struct.daysAdminclassSessionNumberList)
          {
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, _iter793.size()));
              for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter794 : _iter793.entrySet())
              {
                oprot.writeI32(_iter794.getKey());
                oprot.writeI32(_iter794.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StageOneResultOfClassScheduleTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StageOneResultOfClassScheduleTupleScheme getScheme() {
      return new StageOneResultOfClassScheduleTupleScheme();
    }
  }

  private static class StageOneResultOfClassScheduleTupleScheme extends org.apache.thrift.scheme.TupleScheme<StageOneResultOfClassSchedule> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StageOneResultOfClassSchedule struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDaysMixteachingclassPool()) {
        optionals.set(0);
      }
      if (struct.isSetDaysMixteachingclassSessionNumberList()) {
        optionals.set(1);
      }
      if (struct.isSetDaysTeacherSessionNumberList()) {
        optionals.set(2);
      }
      if (struct.isSetDaysAdminclassSessionNumberList()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetDaysMixteachingclassPool()) {
        {
          oprot.writeI32(struct.daysMixteachingclassPool.size());
          for (java.util.List<java.lang.Integer> _iter795 : struct.daysMixteachingclassPool)
          {
            {
              oprot.writeI32(_iter795.size());
              for (int _iter796 : _iter795)
              {
                oprot.writeI32(_iter796);
              }
            }
          }
        }
      }
      if (struct.isSetDaysMixteachingclassSessionNumberList()) {
        {
          oprot.writeI32(struct.daysMixteachingclassSessionNumberList.size());
          for (java.util.Map<java.lang.Integer,java.lang.Integer> _iter797 : struct.daysMixteachingclassSessionNumberList)
          {
            {
              oprot.writeI32(_iter797.size());
              for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter798 : _iter797.entrySet())
              {
                oprot.writeI32(_iter798.getKey());
                oprot.writeI32(_iter798.getValue());
              }
            }
          }
        }
      }
      if (struct.isSetDaysTeacherSessionNumberList()) {
        {
          oprot.writeI32(struct.daysTeacherSessionNumberList.size());
          for (java.util.Map<java.lang.Integer,java.lang.Integer> _iter799 : struct.daysTeacherSessionNumberList)
          {
            {
              oprot.writeI32(_iter799.size());
              for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter800 : _iter799.entrySet())
              {
                oprot.writeI32(_iter800.getKey());
                oprot.writeI32(_iter800.getValue());
              }
            }
          }
        }
      }
      if (struct.isSetDaysAdminclassSessionNumberList()) {
        {
          oprot.writeI32(struct.daysAdminclassSessionNumberList.size());
          for (java.util.Map<java.lang.Integer,java.lang.Integer> _iter801 : struct.daysAdminclassSessionNumberList)
          {
            {
              oprot.writeI32(_iter801.size());
              for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> _iter802 : _iter801.entrySet())
              {
                oprot.writeI32(_iter802.getKey());
                oprot.writeI32(_iter802.getValue());
              }
            }
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StageOneResultOfClassSchedule struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list803 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.daysMixteachingclassPool = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list803.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem804;
          for (int _i805 = 0; _i805 < _list803.size; ++_i805)
          {
            {
              org.apache.thrift.protocol.TList _list806 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
              _elem804 = new java.util.ArrayList<java.lang.Integer>(_list806.size);
              int _elem807;
              for (int _i808 = 0; _i808 < _list806.size; ++_i808)
              {
                _elem807 = iprot.readI32();
                _elem804.add(_elem807);
              }
            }
            struct.daysMixteachingclassPool.add(_elem804);
          }
        }
        struct.setDaysMixteachingclassPoolIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list809 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.daysMixteachingclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(_list809.size);
          @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> _elem810;
          for (int _i811 = 0; _i811 < _list809.size; ++_i811)
          {
            {
              org.apache.thrift.protocol.TMap _map812 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, iprot.readI32());
              _elem810 = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map812.size);
              int _key813;
              int _val814;
              for (int _i815 = 0; _i815 < _map812.size; ++_i815)
              {
                _key813 = iprot.readI32();
                _val814 = iprot.readI32();
                _elem810.put(_key813, _val814);
              }
            }
            struct.daysMixteachingclassSessionNumberList.add(_elem810);
          }
        }
        struct.setDaysMixteachingclassSessionNumberListIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list816 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.daysTeacherSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(_list816.size);
          @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> _elem817;
          for (int _i818 = 0; _i818 < _list816.size; ++_i818)
          {
            {
              org.apache.thrift.protocol.TMap _map819 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, iprot.readI32());
              _elem817 = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map819.size);
              int _key820;
              int _val821;
              for (int _i822 = 0; _i822 < _map819.size; ++_i822)
              {
                _key820 = iprot.readI32();
                _val821 = iprot.readI32();
                _elem817.put(_key820, _val821);
              }
            }
            struct.daysTeacherSessionNumberList.add(_elem817);
          }
        }
        struct.setDaysTeacherSessionNumberListIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list823 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.daysAdminclassSessionNumberList = new java.util.ArrayList<java.util.Map<java.lang.Integer,java.lang.Integer>>(_list823.size);
          @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,java.lang.Integer> _elem824;
          for (int _i825 = 0; _i825 < _list823.size; ++_i825)
          {
            {
              org.apache.thrift.protocol.TMap _map826 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.I32, iprot.readI32());
              _elem824 = new java.util.HashMap<java.lang.Integer,java.lang.Integer>(2*_map826.size);
              int _key827;
              int _val828;
              for (int _i829 = 0; _i829 < _map826.size; ++_i829)
              {
                _key827 = iprot.readI32();
                _val828 = iprot.readI32();
                _elem824.put(_key827, _val828);
              }
            }
            struct.daysAdminclassSessionNumberList.add(_elem824);
          }
        }
        struct.setDaysAdminclassSessionNumberListIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

