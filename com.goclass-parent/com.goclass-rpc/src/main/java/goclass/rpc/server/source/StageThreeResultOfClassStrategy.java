/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package goclass.rpc.server.source;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-11-07")
public class StageThreeResultOfClassStrategy implements org.apache.thrift.TBase<StageThreeResultOfClassStrategy, StageThreeResultOfClassStrategy._Fields>, java.io.Serializable, Cloneable, Comparable<StageThreeResultOfClassStrategy> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StageThreeResultOfClassStrategy");

  private static final org.apache.thrift.protocol.TField ADMINCLASS_SOLUTION_FIELD_DESC = new org.apache.thrift.protocol.TField("adminclassSolution", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField WALKINGCLASS_STUDENT_AVERAGE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("walkingclassStudentAverageNumber", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField IS_HPMIX_FIELD_DESC = new org.apache.thrift.protocol.TField("isHPMix", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField WALKING_CLASS_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("walkingClassNumber", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField SUBJECT_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("subjectList", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField ADMINCLASS_TRANSFORM_SOLUTION_FIELD_DESC = new org.apache.thrift.protocol.TField("adminclassTransformSolution", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField ADMINCLASS_STUDENT_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("adminclassStudentSet", org.apache.thrift.protocol.TType.LIST, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new StageThreeResultOfClassStrategyStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new StageThreeResultOfClassStrategyTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>> adminclassSolution; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Double>> walkingclassStudentAverageNumber; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Short> isHPMix; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Short>> walkingClassNumber; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Short> subjectList; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> adminclassTransformSolution; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>> adminclassStudentSet; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADMINCLASS_SOLUTION((short)1, "adminclassSolution"),
    WALKINGCLASS_STUDENT_AVERAGE_NUMBER((short)2, "walkingclassStudentAverageNumber"),
    IS_HPMIX((short)3, "isHPMix"),
    WALKING_CLASS_NUMBER((short)4, "walkingClassNumber"),
    SUBJECT_LIST((short)5, "subjectList"),
    ADMINCLASS_TRANSFORM_SOLUTION((short)6, "adminclassTransformSolution"),
    ADMINCLASS_STUDENT_SET((short)7, "adminclassStudentSet");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADMINCLASS_SOLUTION
          return ADMINCLASS_SOLUTION;
        case 2: // WALKINGCLASS_STUDENT_AVERAGE_NUMBER
          return WALKINGCLASS_STUDENT_AVERAGE_NUMBER;
        case 3: // IS_HPMIX
          return IS_HPMIX;
        case 4: // WALKING_CLASS_NUMBER
          return WALKING_CLASS_NUMBER;
        case 5: // SUBJECT_LIST
          return SUBJECT_LIST;
        case 6: // ADMINCLASS_TRANSFORM_SOLUTION
          return ADMINCLASS_TRANSFORM_SOLUTION;
        case 7: // ADMINCLASS_STUDENT_SET
          return ADMINCLASS_STUDENT_SET;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADMINCLASS_SOLUTION, new org.apache.thrift.meta_data.FieldMetaData("adminclassSolution", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                    new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16), 
                        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)))))));
    tmpMap.put(_Fields.WALKINGCLASS_STUDENT_AVERAGE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("walkingclassStudentAverageNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)))));
    tmpMap.put(_Fields.IS_HPMIX, new org.apache.thrift.meta_data.FieldMetaData("isHPMix", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16))));
    tmpMap.put(_Fields.WALKING_CLASS_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("walkingClassNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)))));
    tmpMap.put(_Fields.SUBJECT_LIST, new org.apache.thrift.meta_data.FieldMetaData("subjectList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16))));
    tmpMap.put(_Fields.ADMINCLASS_TRANSFORM_SOLUTION, new org.apache.thrift.meta_data.FieldMetaData("adminclassTransformSolution", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16), 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16))))));
    tmpMap.put(_Fields.ADMINCLASS_STUDENT_SET, new org.apache.thrift.meta_data.FieldMetaData("adminclassStudentSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16), 
                    new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
                        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)))))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StageThreeResultOfClassStrategy.class, metaDataMap);
  }

  public StageThreeResultOfClassStrategy() {
  }

  public StageThreeResultOfClassStrategy(
    java.util.List<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>> adminclassSolution,
    java.util.List<java.util.List<java.lang.Double>> walkingclassStudentAverageNumber,
    java.util.List<java.lang.Short> isHPMix,
    java.util.List<java.util.List<java.lang.Short>> walkingClassNumber,
    java.util.List<java.lang.Short> subjectList,
    java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> adminclassTransformSolution,
    java.util.List<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>> adminclassStudentSet)
  {
    this();
    this.adminclassSolution = adminclassSolution;
    this.walkingclassStudentAverageNumber = walkingclassStudentAverageNumber;
    this.isHPMix = isHPMix;
    this.walkingClassNumber = walkingClassNumber;
    this.subjectList = subjectList;
    this.adminclassTransformSolution = adminclassTransformSolution;
    this.adminclassStudentSet = adminclassStudentSet;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StageThreeResultOfClassStrategy(StageThreeResultOfClassStrategy other) {
    if (other.isSetAdminclassSolution()) {
      java.util.List<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>> __this__adminclassSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>>(other.adminclassSolution.size());
      for (java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> other_element : other.adminclassSolution) {
        java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> __this__adminclassSolution_copy = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>(other_element.size());
        for (java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> other_element_element : other_element) {
          java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> __this__adminclassSolution_copy_copy = new java.util.ArrayList<java.util.Map<java.lang.Short,java.lang.Short>>(other_element_element.size());
          for (java.util.Map<java.lang.Short,java.lang.Short> other_element_element_element : other_element_element) {
            java.util.Map<java.lang.Short,java.lang.Short> __this__adminclassSolution_copy_copy_copy = new java.util.HashMap<java.lang.Short,java.lang.Short>(other_element_element_element);
            __this__adminclassSolution_copy_copy.add(__this__adminclassSolution_copy_copy_copy);
          }
          __this__adminclassSolution_copy.add(__this__adminclassSolution_copy_copy);
        }
        __this__adminclassSolution.add(__this__adminclassSolution_copy);
      }
      this.adminclassSolution = __this__adminclassSolution;
    }
    if (other.isSetWalkingclassStudentAverageNumber()) {
      java.util.List<java.util.List<java.lang.Double>> __this__walkingclassStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>(other.walkingclassStudentAverageNumber.size());
      for (java.util.List<java.lang.Double> other_element : other.walkingclassStudentAverageNumber) {
        java.util.List<java.lang.Double> __this__walkingclassStudentAverageNumber_copy = new java.util.ArrayList<java.lang.Double>(other_element);
        __this__walkingclassStudentAverageNumber.add(__this__walkingclassStudentAverageNumber_copy);
      }
      this.walkingclassStudentAverageNumber = __this__walkingclassStudentAverageNumber;
    }
    if (other.isSetIsHPMix()) {
      java.util.List<java.lang.Short> __this__isHPMix = new java.util.ArrayList<java.lang.Short>(other.isHPMix);
      this.isHPMix = __this__isHPMix;
    }
    if (other.isSetWalkingClassNumber()) {
      java.util.List<java.util.List<java.lang.Short>> __this__walkingClassNumber = new java.util.ArrayList<java.util.List<java.lang.Short>>(other.walkingClassNumber.size());
      for (java.util.List<java.lang.Short> other_element : other.walkingClassNumber) {
        java.util.List<java.lang.Short> __this__walkingClassNumber_copy = new java.util.ArrayList<java.lang.Short>(other_element);
        __this__walkingClassNumber.add(__this__walkingClassNumber_copy);
      }
      this.walkingClassNumber = __this__walkingClassNumber;
    }
    if (other.isSetSubjectList()) {
      java.util.List<java.lang.Short> __this__subjectList = new java.util.ArrayList<java.lang.Short>(other.subjectList);
      this.subjectList = __this__subjectList;
    }
    if (other.isSetAdminclassTransformSolution()) {
      java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> __this__adminclassTransformSolution = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>(other.adminclassTransformSolution.size());
      for (java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> other_element : other.adminclassTransformSolution) {
        java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> __this__adminclassTransformSolution_copy = new java.util.ArrayList<java.util.Map<java.lang.Short,java.lang.Short>>(other_element.size());
        for (java.util.Map<java.lang.Short,java.lang.Short> other_element_element : other_element) {
          java.util.Map<java.lang.Short,java.lang.Short> __this__adminclassTransformSolution_copy_copy = new java.util.HashMap<java.lang.Short,java.lang.Short>(other_element_element);
          __this__adminclassTransformSolution_copy.add(__this__adminclassTransformSolution_copy_copy);
        }
        __this__adminclassTransformSolution.add(__this__adminclassTransformSolution_copy);
      }
      this.adminclassTransformSolution = __this__adminclassTransformSolution;
    }
    if (other.isSetAdminclassStudentSet()) {
      java.util.List<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>> __this__adminclassStudentSet = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>>(other.adminclassStudentSet.size());
      for (java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> other_element : other.adminclassStudentSet) {
        java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> __this__adminclassStudentSet_copy = new java.util.ArrayList<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>(other_element.size());
        for (java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>> other_element_element : other_element) {
          java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>> __this__adminclassStudentSet_copy_copy = new java.util.HashMap<java.lang.Short,java.util.Set<java.lang.Short>>(other_element_element.size());
          for (java.util.Map.Entry<java.lang.Short, java.util.Set<java.lang.Short>> other_element_element_element : other_element_element.entrySet()) {

            java.lang.Short other_element_element_element_key = other_element_element_element.getKey();
            java.util.Set<java.lang.Short> other_element_element_element_value = other_element_element_element.getValue();

            java.lang.Short __this__adminclassStudentSet_copy_copy_copy_key = other_element_element_element_key;

            java.util.Set<java.lang.Short> __this__adminclassStudentSet_copy_copy_copy_value = new java.util.HashSet<java.lang.Short>(other_element_element_element_value);

            __this__adminclassStudentSet_copy_copy.put(__this__adminclassStudentSet_copy_copy_copy_key, __this__adminclassStudentSet_copy_copy_copy_value);
          }
          __this__adminclassStudentSet_copy.add(__this__adminclassStudentSet_copy_copy);
        }
        __this__adminclassStudentSet.add(__this__adminclassStudentSet_copy);
      }
      this.adminclassStudentSet = __this__adminclassStudentSet;
    }
  }

  public StageThreeResultOfClassStrategy deepCopy() {
    return new StageThreeResultOfClassStrategy(this);
  }

  @Override
  public void clear() {
    this.adminclassSolution = null;
    this.walkingclassStudentAverageNumber = null;
    this.isHPMix = null;
    this.walkingClassNumber = null;
    this.subjectList = null;
    this.adminclassTransformSolution = null;
    this.adminclassStudentSet = null;
  }

  public int getAdminclassSolutionSize() {
    return (this.adminclassSolution == null) ? 0 : this.adminclassSolution.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>> getAdminclassSolutionIterator() {
    return (this.adminclassSolution == null) ? null : this.adminclassSolution.iterator();
  }

  public void addToAdminclassSolution(java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> elem) {
    if (this.adminclassSolution == null) {
      this.adminclassSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>>();
    }
    this.adminclassSolution.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>> getAdminclassSolution() {
    return this.adminclassSolution;
  }

  public StageThreeResultOfClassStrategy setAdminclassSolution(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>> adminclassSolution) {
    this.adminclassSolution = adminclassSolution;
    return this;
  }

  public void unsetAdminclassSolution() {
    this.adminclassSolution = null;
  }

  /** Returns true if field adminclassSolution is set (has been assigned a value) and false otherwise */
  public boolean isSetAdminclassSolution() {
    return this.adminclassSolution != null;
  }

  public void setAdminclassSolutionIsSet(boolean value) {
    if (!value) {
      this.adminclassSolution = null;
    }
  }

  public int getWalkingclassStudentAverageNumberSize() {
    return (this.walkingclassStudentAverageNumber == null) ? 0 : this.walkingclassStudentAverageNumber.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.Double>> getWalkingclassStudentAverageNumberIterator() {
    return (this.walkingclassStudentAverageNumber == null) ? null : this.walkingclassStudentAverageNumber.iterator();
  }

  public void addToWalkingclassStudentAverageNumber(java.util.List<java.lang.Double> elem) {
    if (this.walkingclassStudentAverageNumber == null) {
      this.walkingclassStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>();
    }
    this.walkingclassStudentAverageNumber.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.Double>> getWalkingclassStudentAverageNumber() {
    return this.walkingclassStudentAverageNumber;
  }

  public StageThreeResultOfClassStrategy setWalkingclassStudentAverageNumber(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Double>> walkingclassStudentAverageNumber) {
    this.walkingclassStudentAverageNumber = walkingclassStudentAverageNumber;
    return this;
  }

  public void unsetWalkingclassStudentAverageNumber() {
    this.walkingclassStudentAverageNumber = null;
  }

  /** Returns true if field walkingclassStudentAverageNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetWalkingclassStudentAverageNumber() {
    return this.walkingclassStudentAverageNumber != null;
  }

  public void setWalkingclassStudentAverageNumberIsSet(boolean value) {
    if (!value) {
      this.walkingclassStudentAverageNumber = null;
    }
  }

  public int getIsHPMixSize() {
    return (this.isHPMix == null) ? 0 : this.isHPMix.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Short> getIsHPMixIterator() {
    return (this.isHPMix == null) ? null : this.isHPMix.iterator();
  }

  public void addToIsHPMix(short elem) {
    if (this.isHPMix == null) {
      this.isHPMix = new java.util.ArrayList<java.lang.Short>();
    }
    this.isHPMix.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Short> getIsHPMix() {
    return this.isHPMix;
  }

  public StageThreeResultOfClassStrategy setIsHPMix(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Short> isHPMix) {
    this.isHPMix = isHPMix;
    return this;
  }

  public void unsetIsHPMix() {
    this.isHPMix = null;
  }

  /** Returns true if field isHPMix is set (has been assigned a value) and false otherwise */
  public boolean isSetIsHPMix() {
    return this.isHPMix != null;
  }

  public void setIsHPMixIsSet(boolean value) {
    if (!value) {
      this.isHPMix = null;
    }
  }

  public int getWalkingClassNumberSize() {
    return (this.walkingClassNumber == null) ? 0 : this.walkingClassNumber.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.Short>> getWalkingClassNumberIterator() {
    return (this.walkingClassNumber == null) ? null : this.walkingClassNumber.iterator();
  }

  public void addToWalkingClassNumber(java.util.List<java.lang.Short> elem) {
    if (this.walkingClassNumber == null) {
      this.walkingClassNumber = new java.util.ArrayList<java.util.List<java.lang.Short>>();
    }
    this.walkingClassNumber.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.Short>> getWalkingClassNumber() {
    return this.walkingClassNumber;
  }

  public StageThreeResultOfClassStrategy setWalkingClassNumber(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Short>> walkingClassNumber) {
    this.walkingClassNumber = walkingClassNumber;
    return this;
  }

  public void unsetWalkingClassNumber() {
    this.walkingClassNumber = null;
  }

  /** Returns true if field walkingClassNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetWalkingClassNumber() {
    return this.walkingClassNumber != null;
  }

  public void setWalkingClassNumberIsSet(boolean value) {
    if (!value) {
      this.walkingClassNumber = null;
    }
  }

  public int getSubjectListSize() {
    return (this.subjectList == null) ? 0 : this.subjectList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Short> getSubjectListIterator() {
    return (this.subjectList == null) ? null : this.subjectList.iterator();
  }

  public void addToSubjectList(short elem) {
    if (this.subjectList == null) {
      this.subjectList = new java.util.ArrayList<java.lang.Short>();
    }
    this.subjectList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Short> getSubjectList() {
    return this.subjectList;
  }

  public StageThreeResultOfClassStrategy setSubjectList(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Short> subjectList) {
    this.subjectList = subjectList;
    return this;
  }

  public void unsetSubjectList() {
    this.subjectList = null;
  }

  /** Returns true if field subjectList is set (has been assigned a value) and false otherwise */
  public boolean isSetSubjectList() {
    return this.subjectList != null;
  }

  public void setSubjectListIsSet(boolean value) {
    if (!value) {
      this.subjectList = null;
    }
  }

  public int getAdminclassTransformSolutionSize() {
    return (this.adminclassTransformSolution == null) ? 0 : this.adminclassTransformSolution.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> getAdminclassTransformSolutionIterator() {
    return (this.adminclassTransformSolution == null) ? null : this.adminclassTransformSolution.iterator();
  }

  public void addToAdminclassTransformSolution(java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> elem) {
    if (this.adminclassTransformSolution == null) {
      this.adminclassTransformSolution = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>();
    }
    this.adminclassTransformSolution.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> getAdminclassTransformSolution() {
    return this.adminclassTransformSolution;
  }

  public StageThreeResultOfClassStrategy setAdminclassTransformSolution(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> adminclassTransformSolution) {
    this.adminclassTransformSolution = adminclassTransformSolution;
    return this;
  }

  public void unsetAdminclassTransformSolution() {
    this.adminclassTransformSolution = null;
  }

  /** Returns true if field adminclassTransformSolution is set (has been assigned a value) and false otherwise */
  public boolean isSetAdminclassTransformSolution() {
    return this.adminclassTransformSolution != null;
  }

  public void setAdminclassTransformSolutionIsSet(boolean value) {
    if (!value) {
      this.adminclassTransformSolution = null;
    }
  }

  public int getAdminclassStudentSetSize() {
    return (this.adminclassStudentSet == null) ? 0 : this.adminclassStudentSet.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>> getAdminclassStudentSetIterator() {
    return (this.adminclassStudentSet == null) ? null : this.adminclassStudentSet.iterator();
  }

  public void addToAdminclassStudentSet(java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> elem) {
    if (this.adminclassStudentSet == null) {
      this.adminclassStudentSet = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>>();
    }
    this.adminclassStudentSet.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>> getAdminclassStudentSet() {
    return this.adminclassStudentSet;
  }

  public StageThreeResultOfClassStrategy setAdminclassStudentSet(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>> adminclassStudentSet) {
    this.adminclassStudentSet = adminclassStudentSet;
    return this;
  }

  public void unsetAdminclassStudentSet() {
    this.adminclassStudentSet = null;
  }

  /** Returns true if field adminclassStudentSet is set (has been assigned a value) and false otherwise */
  public boolean isSetAdminclassStudentSet() {
    return this.adminclassStudentSet != null;
  }

  public void setAdminclassStudentSetIsSet(boolean value) {
    if (!value) {
      this.adminclassStudentSet = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ADMINCLASS_SOLUTION:
      if (value == null) {
        unsetAdminclassSolution();
      } else {
        setAdminclassSolution((java.util.List<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>>)value);
      }
      break;

    case WALKINGCLASS_STUDENT_AVERAGE_NUMBER:
      if (value == null) {
        unsetWalkingclassStudentAverageNumber();
      } else {
        setWalkingclassStudentAverageNumber((java.util.List<java.util.List<java.lang.Double>>)value);
      }
      break;

    case IS_HPMIX:
      if (value == null) {
        unsetIsHPMix();
      } else {
        setIsHPMix((java.util.List<java.lang.Short>)value);
      }
      break;

    case WALKING_CLASS_NUMBER:
      if (value == null) {
        unsetWalkingClassNumber();
      } else {
        setWalkingClassNumber((java.util.List<java.util.List<java.lang.Short>>)value);
      }
      break;

    case SUBJECT_LIST:
      if (value == null) {
        unsetSubjectList();
      } else {
        setSubjectList((java.util.List<java.lang.Short>)value);
      }
      break;

    case ADMINCLASS_TRANSFORM_SOLUTION:
      if (value == null) {
        unsetAdminclassTransformSolution();
      } else {
        setAdminclassTransformSolution((java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>)value);
      }
      break;

    case ADMINCLASS_STUDENT_SET:
      if (value == null) {
        unsetAdminclassStudentSet();
      } else {
        setAdminclassStudentSet((java.util.List<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ADMINCLASS_SOLUTION:
      return getAdminclassSolution();

    case WALKINGCLASS_STUDENT_AVERAGE_NUMBER:
      return getWalkingclassStudentAverageNumber();

    case IS_HPMIX:
      return getIsHPMix();

    case WALKING_CLASS_NUMBER:
      return getWalkingClassNumber();

    case SUBJECT_LIST:
      return getSubjectList();

    case ADMINCLASS_TRANSFORM_SOLUTION:
      return getAdminclassTransformSolution();

    case ADMINCLASS_STUDENT_SET:
      return getAdminclassStudentSet();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ADMINCLASS_SOLUTION:
      return isSetAdminclassSolution();
    case WALKINGCLASS_STUDENT_AVERAGE_NUMBER:
      return isSetWalkingclassStudentAverageNumber();
    case IS_HPMIX:
      return isSetIsHPMix();
    case WALKING_CLASS_NUMBER:
      return isSetWalkingClassNumber();
    case SUBJECT_LIST:
      return isSetSubjectList();
    case ADMINCLASS_TRANSFORM_SOLUTION:
      return isSetAdminclassTransformSolution();
    case ADMINCLASS_STUDENT_SET:
      return isSetAdminclassStudentSet();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof StageThreeResultOfClassStrategy)
      return this.equals((StageThreeResultOfClassStrategy)that);
    return false;
  }

  public boolean equals(StageThreeResultOfClassStrategy that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_adminclassSolution = true && this.isSetAdminclassSolution();
    boolean that_present_adminclassSolution = true && that.isSetAdminclassSolution();
    if (this_present_adminclassSolution || that_present_adminclassSolution) {
      if (!(this_present_adminclassSolution && that_present_adminclassSolution))
        return false;
      if (!this.adminclassSolution.equals(that.adminclassSolution))
        return false;
    }

    boolean this_present_walkingclassStudentAverageNumber = true && this.isSetWalkingclassStudentAverageNumber();
    boolean that_present_walkingclassStudentAverageNumber = true && that.isSetWalkingclassStudentAverageNumber();
    if (this_present_walkingclassStudentAverageNumber || that_present_walkingclassStudentAverageNumber) {
      if (!(this_present_walkingclassStudentAverageNumber && that_present_walkingclassStudentAverageNumber))
        return false;
      if (!this.walkingclassStudentAverageNumber.equals(that.walkingclassStudentAverageNumber))
        return false;
    }

    boolean this_present_isHPMix = true && this.isSetIsHPMix();
    boolean that_present_isHPMix = true && that.isSetIsHPMix();
    if (this_present_isHPMix || that_present_isHPMix) {
      if (!(this_present_isHPMix && that_present_isHPMix))
        return false;
      if (!this.isHPMix.equals(that.isHPMix))
        return false;
    }

    boolean this_present_walkingClassNumber = true && this.isSetWalkingClassNumber();
    boolean that_present_walkingClassNumber = true && that.isSetWalkingClassNumber();
    if (this_present_walkingClassNumber || that_present_walkingClassNumber) {
      if (!(this_present_walkingClassNumber && that_present_walkingClassNumber))
        return false;
      if (!this.walkingClassNumber.equals(that.walkingClassNumber))
        return false;
    }

    boolean this_present_subjectList = true && this.isSetSubjectList();
    boolean that_present_subjectList = true && that.isSetSubjectList();
    if (this_present_subjectList || that_present_subjectList) {
      if (!(this_present_subjectList && that_present_subjectList))
        return false;
      if (!this.subjectList.equals(that.subjectList))
        return false;
    }

    boolean this_present_adminclassTransformSolution = true && this.isSetAdminclassTransformSolution();
    boolean that_present_adminclassTransformSolution = true && that.isSetAdminclassTransformSolution();
    if (this_present_adminclassTransformSolution || that_present_adminclassTransformSolution) {
      if (!(this_present_adminclassTransformSolution && that_present_adminclassTransformSolution))
        return false;
      if (!this.adminclassTransformSolution.equals(that.adminclassTransformSolution))
        return false;
    }

    boolean this_present_adminclassStudentSet = true && this.isSetAdminclassStudentSet();
    boolean that_present_adminclassStudentSet = true && that.isSetAdminclassStudentSet();
    if (this_present_adminclassStudentSet || that_present_adminclassStudentSet) {
      if (!(this_present_adminclassStudentSet && that_present_adminclassStudentSet))
        return false;
      if (!this.adminclassStudentSet.equals(that.adminclassStudentSet))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAdminclassSolution()) ? 131071 : 524287);
    if (isSetAdminclassSolution())
      hashCode = hashCode * 8191 + adminclassSolution.hashCode();

    hashCode = hashCode * 8191 + ((isSetWalkingclassStudentAverageNumber()) ? 131071 : 524287);
    if (isSetWalkingclassStudentAverageNumber())
      hashCode = hashCode * 8191 + walkingclassStudentAverageNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsHPMix()) ? 131071 : 524287);
    if (isSetIsHPMix())
      hashCode = hashCode * 8191 + isHPMix.hashCode();

    hashCode = hashCode * 8191 + ((isSetWalkingClassNumber()) ? 131071 : 524287);
    if (isSetWalkingClassNumber())
      hashCode = hashCode * 8191 + walkingClassNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetSubjectList()) ? 131071 : 524287);
    if (isSetSubjectList())
      hashCode = hashCode * 8191 + subjectList.hashCode();

    hashCode = hashCode * 8191 + ((isSetAdminclassTransformSolution()) ? 131071 : 524287);
    if (isSetAdminclassTransformSolution())
      hashCode = hashCode * 8191 + adminclassTransformSolution.hashCode();

    hashCode = hashCode * 8191 + ((isSetAdminclassStudentSet()) ? 131071 : 524287);
    if (isSetAdminclassStudentSet())
      hashCode = hashCode * 8191 + adminclassStudentSet.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(StageThreeResultOfClassStrategy other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAdminclassSolution()).compareTo(other.isSetAdminclassSolution());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdminclassSolution()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adminclassSolution, other.adminclassSolution);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWalkingclassStudentAverageNumber()).compareTo(other.isSetWalkingclassStudentAverageNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalkingclassStudentAverageNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.walkingclassStudentAverageNumber, other.walkingclassStudentAverageNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsHPMix()).compareTo(other.isSetIsHPMix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHPMix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isHPMix, other.isHPMix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWalkingClassNumber()).compareTo(other.isSetWalkingClassNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalkingClassNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.walkingClassNumber, other.walkingClassNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubjectList()).compareTo(other.isSetSubjectList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubjectList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subjectList, other.subjectList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdminclassTransformSolution()).compareTo(other.isSetAdminclassTransformSolution());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdminclassTransformSolution()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adminclassTransformSolution, other.adminclassTransformSolution);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdminclassStudentSet()).compareTo(other.isSetAdminclassStudentSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdminclassStudentSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adminclassStudentSet, other.adminclassStudentSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("StageThreeResultOfClassStrategy(");
    boolean first = true;

    sb.append("adminclassSolution:");
    if (this.adminclassSolution == null) {
      sb.append("null");
    } else {
      sb.append(this.adminclassSolution);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("walkingclassStudentAverageNumber:");
    if (this.walkingclassStudentAverageNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.walkingclassStudentAverageNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isHPMix:");
    if (this.isHPMix == null) {
      sb.append("null");
    } else {
      sb.append(this.isHPMix);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("walkingClassNumber:");
    if (this.walkingClassNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.walkingClassNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subjectList:");
    if (this.subjectList == null) {
      sb.append("null");
    } else {
      sb.append(this.subjectList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adminclassTransformSolution:");
    if (this.adminclassTransformSolution == null) {
      sb.append("null");
    } else {
      sb.append(this.adminclassTransformSolution);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adminclassStudentSet:");
    if (this.adminclassStudentSet == null) {
      sb.append("null");
    } else {
      sb.append(this.adminclassStudentSet);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StageThreeResultOfClassStrategyStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StageThreeResultOfClassStrategyStandardScheme getScheme() {
      return new StageThreeResultOfClassStrategyStandardScheme();
    }
  }

  private static class StageThreeResultOfClassStrategyStandardScheme extends org.apache.thrift.scheme.StandardScheme<StageThreeResultOfClassStrategy> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StageThreeResultOfClassStrategy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADMINCLASS_SOLUTION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list192 = iprot.readListBegin();
                struct.adminclassSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>>(_list192.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> _elem193;
                for (int _i194 = 0; _i194 < _list192.size; ++_i194)
                {
                  {
                    org.apache.thrift.protocol.TList _list195 = iprot.readListBegin();
                    _elem193 = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>(_list195.size);
                    @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _elem196;
                    for (int _i197 = 0; _i197 < _list195.size; ++_i197)
                    {
                      {
                        org.apache.thrift.protocol.TList _list198 = iprot.readListBegin();
                        _elem196 = new java.util.ArrayList<java.util.Map<java.lang.Short,java.lang.Short>>(_list198.size);
                        @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Short,java.lang.Short> _elem199;
                        for (int _i200 = 0; _i200 < _list198.size; ++_i200)
                        {
                          {
                            org.apache.thrift.protocol.TMap _map201 = iprot.readMapBegin();
                            _elem199 = new java.util.HashMap<java.lang.Short,java.lang.Short>(2*_map201.size);
                            short _key202;
                            short _val203;
                            for (int _i204 = 0; _i204 < _map201.size; ++_i204)
                            {
                              _key202 = iprot.readI16();
                              _val203 = iprot.readI16();
                              _elem199.put(_key202, _val203);
                            }
                            iprot.readMapEnd();
                          }
                          _elem196.add(_elem199);
                        }
                        iprot.readListEnd();
                      }
                      _elem193.add(_elem196);
                    }
                    iprot.readListEnd();
                  }
                  struct.adminclassSolution.add(_elem193);
                }
                iprot.readListEnd();
              }
              struct.setAdminclassSolutionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WALKINGCLASS_STUDENT_AVERAGE_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list205 = iprot.readListBegin();
                struct.walkingclassStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>(_list205.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> _elem206;
                for (int _i207 = 0; _i207 < _list205.size; ++_i207)
                {
                  {
                    org.apache.thrift.protocol.TList _list208 = iprot.readListBegin();
                    _elem206 = new java.util.ArrayList<java.lang.Double>(_list208.size);
                    double _elem209;
                    for (int _i210 = 0; _i210 < _list208.size; ++_i210)
                    {
                      _elem209 = iprot.readDouble();
                      _elem206.add(_elem209);
                    }
                    iprot.readListEnd();
                  }
                  struct.walkingclassStudentAverageNumber.add(_elem206);
                }
                iprot.readListEnd();
              }
              struct.setWalkingclassStudentAverageNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_HPMIX
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list211 = iprot.readListBegin();
                struct.isHPMix = new java.util.ArrayList<java.lang.Short>(_list211.size);
                short _elem212;
                for (int _i213 = 0; _i213 < _list211.size; ++_i213)
                {
                  _elem212 = iprot.readI16();
                  struct.isHPMix.add(_elem212);
                }
                iprot.readListEnd();
              }
              struct.setIsHPMixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // WALKING_CLASS_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list214 = iprot.readListBegin();
                struct.walkingClassNumber = new java.util.ArrayList<java.util.List<java.lang.Short>>(_list214.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Short> _elem215;
                for (int _i216 = 0; _i216 < _list214.size; ++_i216)
                {
                  {
                    org.apache.thrift.protocol.TList _list217 = iprot.readListBegin();
                    _elem215 = new java.util.ArrayList<java.lang.Short>(_list217.size);
                    short _elem218;
                    for (int _i219 = 0; _i219 < _list217.size; ++_i219)
                    {
                      _elem218 = iprot.readI16();
                      _elem215.add(_elem218);
                    }
                    iprot.readListEnd();
                  }
                  struct.walkingClassNumber.add(_elem215);
                }
                iprot.readListEnd();
              }
              struct.setWalkingClassNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUBJECT_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list220 = iprot.readListBegin();
                struct.subjectList = new java.util.ArrayList<java.lang.Short>(_list220.size);
                short _elem221;
                for (int _i222 = 0; _i222 < _list220.size; ++_i222)
                {
                  _elem221 = iprot.readI16();
                  struct.subjectList.add(_elem221);
                }
                iprot.readListEnd();
              }
              struct.setSubjectListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ADMINCLASS_TRANSFORM_SOLUTION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list223 = iprot.readListBegin();
                struct.adminclassTransformSolution = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>(_list223.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _elem224;
                for (int _i225 = 0; _i225 < _list223.size; ++_i225)
                {
                  {
                    org.apache.thrift.protocol.TList _list226 = iprot.readListBegin();
                    _elem224 = new java.util.ArrayList<java.util.Map<java.lang.Short,java.lang.Short>>(_list226.size);
                    @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Short,java.lang.Short> _elem227;
                    for (int _i228 = 0; _i228 < _list226.size; ++_i228)
                    {
                      {
                        org.apache.thrift.protocol.TMap _map229 = iprot.readMapBegin();
                        _elem227 = new java.util.HashMap<java.lang.Short,java.lang.Short>(2*_map229.size);
                        short _key230;
                        short _val231;
                        for (int _i232 = 0; _i232 < _map229.size; ++_i232)
                        {
                          _key230 = iprot.readI16();
                          _val231 = iprot.readI16();
                          _elem227.put(_key230, _val231);
                        }
                        iprot.readMapEnd();
                      }
                      _elem224.add(_elem227);
                    }
                    iprot.readListEnd();
                  }
                  struct.adminclassTransformSolution.add(_elem224);
                }
                iprot.readListEnd();
              }
              struct.setAdminclassTransformSolutionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ADMINCLASS_STUDENT_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list233 = iprot.readListBegin();
                struct.adminclassStudentSet = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>>(_list233.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> _elem234;
                for (int _i235 = 0; _i235 < _list233.size; ++_i235)
                {
                  {
                    org.apache.thrift.protocol.TList _list236 = iprot.readListBegin();
                    _elem234 = new java.util.ArrayList<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>(_list236.size);
                    @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>> _elem237;
                    for (int _i238 = 0; _i238 < _list236.size; ++_i238)
                    {
                      {
                        org.apache.thrift.protocol.TMap _map239 = iprot.readMapBegin();
                        _elem237 = new java.util.HashMap<java.lang.Short,java.util.Set<java.lang.Short>>(2*_map239.size);
                        short _key240;
                        @org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Short> _val241;
                        for (int _i242 = 0; _i242 < _map239.size; ++_i242)
                        {
                          _key240 = iprot.readI16();
                          {
                            org.apache.thrift.protocol.TSet _set243 = iprot.readSetBegin();
                            _val241 = new java.util.HashSet<java.lang.Short>(2*_set243.size);
                            short _elem244;
                            for (int _i245 = 0; _i245 < _set243.size; ++_i245)
                            {
                              _elem244 = iprot.readI16();
                              _val241.add(_elem244);
                            }
                            iprot.readSetEnd();
                          }
                          _elem237.put(_key240, _val241);
                        }
                        iprot.readMapEnd();
                      }
                      _elem234.add(_elem237);
                    }
                    iprot.readListEnd();
                  }
                  struct.adminclassStudentSet.add(_elem234);
                }
                iprot.readListEnd();
              }
              struct.setAdminclassStudentSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StageThreeResultOfClassStrategy struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.adminclassSolution != null) {
        oprot.writeFieldBegin(ADMINCLASS_SOLUTION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.adminclassSolution.size()));
          for (java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> _iter246 : struct.adminclassSolution)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, _iter246.size()));
              for (java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _iter247 : _iter246)
              {
                {
                  oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, _iter247.size()));
                  for (java.util.Map<java.lang.Short,java.lang.Short> _iter248 : _iter247)
                  {
                    {
                      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I16, org.apache.thrift.protocol.TType.I16, _iter248.size()));
                      for (java.util.Map.Entry<java.lang.Short, java.lang.Short> _iter249 : _iter248.entrySet())
                      {
                        oprot.writeI16(_iter249.getKey());
                        oprot.writeI16(_iter249.getValue());
                      }
                      oprot.writeMapEnd();
                    }
                  }
                  oprot.writeListEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.walkingclassStudentAverageNumber != null) {
        oprot.writeFieldBegin(WALKINGCLASS_STUDENT_AVERAGE_NUMBER_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.walkingclassStudentAverageNumber.size()));
          for (java.util.List<java.lang.Double> _iter250 : struct.walkingclassStudentAverageNumber)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, _iter250.size()));
              for (double _iter251 : _iter250)
              {
                oprot.writeDouble(_iter251);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.isHPMix != null) {
        oprot.writeFieldBegin(IS_HPMIX_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, struct.isHPMix.size()));
          for (short _iter252 : struct.isHPMix)
          {
            oprot.writeI16(_iter252);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.walkingClassNumber != null) {
        oprot.writeFieldBegin(WALKING_CLASS_NUMBER_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.walkingClassNumber.size()));
          for (java.util.List<java.lang.Short> _iter253 : struct.walkingClassNumber)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, _iter253.size()));
              for (short _iter254 : _iter253)
              {
                oprot.writeI16(_iter254);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.subjectList != null) {
        oprot.writeFieldBegin(SUBJECT_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, struct.subjectList.size()));
          for (short _iter255 : struct.subjectList)
          {
            oprot.writeI16(_iter255);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.adminclassTransformSolution != null) {
        oprot.writeFieldBegin(ADMINCLASS_TRANSFORM_SOLUTION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.adminclassTransformSolution.size()));
          for (java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _iter256 : struct.adminclassTransformSolution)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, _iter256.size()));
              for (java.util.Map<java.lang.Short,java.lang.Short> _iter257 : _iter256)
              {
                {
                  oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I16, org.apache.thrift.protocol.TType.I16, _iter257.size()));
                  for (java.util.Map.Entry<java.lang.Short, java.lang.Short> _iter258 : _iter257.entrySet())
                  {
                    oprot.writeI16(_iter258.getKey());
                    oprot.writeI16(_iter258.getValue());
                  }
                  oprot.writeMapEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.adminclassStudentSet != null) {
        oprot.writeFieldBegin(ADMINCLASS_STUDENT_SET_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.adminclassStudentSet.size()));
          for (java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> _iter259 : struct.adminclassStudentSet)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, _iter259.size()));
              for (java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>> _iter260 : _iter259)
              {
                {
                  oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I16, org.apache.thrift.protocol.TType.SET, _iter260.size()));
                  for (java.util.Map.Entry<java.lang.Short, java.util.Set<java.lang.Short>> _iter261 : _iter260.entrySet())
                  {
                    oprot.writeI16(_iter261.getKey());
                    {
                      oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I16, _iter261.getValue().size()));
                      for (short _iter262 : _iter261.getValue())
                      {
                        oprot.writeI16(_iter262);
                      }
                      oprot.writeSetEnd();
                    }
                  }
                  oprot.writeMapEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StageThreeResultOfClassStrategyTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StageThreeResultOfClassStrategyTupleScheme getScheme() {
      return new StageThreeResultOfClassStrategyTupleScheme();
    }
  }

  private static class StageThreeResultOfClassStrategyTupleScheme extends org.apache.thrift.scheme.TupleScheme<StageThreeResultOfClassStrategy> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StageThreeResultOfClassStrategy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAdminclassSolution()) {
        optionals.set(0);
      }
      if (struct.isSetWalkingclassStudentAverageNumber()) {
        optionals.set(1);
      }
      if (struct.isSetIsHPMix()) {
        optionals.set(2);
      }
      if (struct.isSetWalkingClassNumber()) {
        optionals.set(3);
      }
      if (struct.isSetSubjectList()) {
        optionals.set(4);
      }
      if (struct.isSetAdminclassTransformSolution()) {
        optionals.set(5);
      }
      if (struct.isSetAdminclassStudentSet()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetAdminclassSolution()) {
        {
          oprot.writeI32(struct.adminclassSolution.size());
          for (java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> _iter263 : struct.adminclassSolution)
          {
            {
              oprot.writeI32(_iter263.size());
              for (java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _iter264 : _iter263)
              {
                {
                  oprot.writeI32(_iter264.size());
                  for (java.util.Map<java.lang.Short,java.lang.Short> _iter265 : _iter264)
                  {
                    {
                      oprot.writeI32(_iter265.size());
                      for (java.util.Map.Entry<java.lang.Short, java.lang.Short> _iter266 : _iter265.entrySet())
                      {
                        oprot.writeI16(_iter266.getKey());
                        oprot.writeI16(_iter266.getValue());
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (struct.isSetWalkingclassStudentAverageNumber()) {
        {
          oprot.writeI32(struct.walkingclassStudentAverageNumber.size());
          for (java.util.List<java.lang.Double> _iter267 : struct.walkingclassStudentAverageNumber)
          {
            {
              oprot.writeI32(_iter267.size());
              for (double _iter268 : _iter267)
              {
                oprot.writeDouble(_iter268);
              }
            }
          }
        }
      }
      if (struct.isSetIsHPMix()) {
        {
          oprot.writeI32(struct.isHPMix.size());
          for (short _iter269 : struct.isHPMix)
          {
            oprot.writeI16(_iter269);
          }
        }
      }
      if (struct.isSetWalkingClassNumber()) {
        {
          oprot.writeI32(struct.walkingClassNumber.size());
          for (java.util.List<java.lang.Short> _iter270 : struct.walkingClassNumber)
          {
            {
              oprot.writeI32(_iter270.size());
              for (short _iter271 : _iter270)
              {
                oprot.writeI16(_iter271);
              }
            }
          }
        }
      }
      if (struct.isSetSubjectList()) {
        {
          oprot.writeI32(struct.subjectList.size());
          for (short _iter272 : struct.subjectList)
          {
            oprot.writeI16(_iter272);
          }
        }
      }
      if (struct.isSetAdminclassTransformSolution()) {
        {
          oprot.writeI32(struct.adminclassTransformSolution.size());
          for (java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _iter273 : struct.adminclassTransformSolution)
          {
            {
              oprot.writeI32(_iter273.size());
              for (java.util.Map<java.lang.Short,java.lang.Short> _iter274 : _iter273)
              {
                {
                  oprot.writeI32(_iter274.size());
                  for (java.util.Map.Entry<java.lang.Short, java.lang.Short> _iter275 : _iter274.entrySet())
                  {
                    oprot.writeI16(_iter275.getKey());
                    oprot.writeI16(_iter275.getValue());
                  }
                }
              }
            }
          }
        }
      }
      if (struct.isSetAdminclassStudentSet()) {
        {
          oprot.writeI32(struct.adminclassStudentSet.size());
          for (java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> _iter276 : struct.adminclassStudentSet)
          {
            {
              oprot.writeI32(_iter276.size());
              for (java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>> _iter277 : _iter276)
              {
                {
                  oprot.writeI32(_iter277.size());
                  for (java.util.Map.Entry<java.lang.Short, java.util.Set<java.lang.Short>> _iter278 : _iter277.entrySet())
                  {
                    oprot.writeI16(_iter278.getKey());
                    {
                      oprot.writeI32(_iter278.getValue().size());
                      for (short _iter279 : _iter278.getValue())
                      {
                        oprot.writeI16(_iter279);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StageThreeResultOfClassStrategy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list280 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.adminclassSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>>(_list280.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>> _elem281;
          for (int _i282 = 0; _i282 < _list280.size; ++_i282)
          {
            {
              org.apache.thrift.protocol.TList _list283 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _elem281 = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>(_list283.size);
              @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _elem284;
              for (int _i285 = 0; _i285 < _list283.size; ++_i285)
              {
                {
                  org.apache.thrift.protocol.TList _list286 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
                  _elem284 = new java.util.ArrayList<java.util.Map<java.lang.Short,java.lang.Short>>(_list286.size);
                  @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Short,java.lang.Short> _elem287;
                  for (int _i288 = 0; _i288 < _list286.size; ++_i288)
                  {
                    {
                      org.apache.thrift.protocol.TMap _map289 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I16, org.apache.thrift.protocol.TType.I16, iprot.readI32());
                      _elem287 = new java.util.HashMap<java.lang.Short,java.lang.Short>(2*_map289.size);
                      short _key290;
                      short _val291;
                      for (int _i292 = 0; _i292 < _map289.size; ++_i292)
                      {
                        _key290 = iprot.readI16();
                        _val291 = iprot.readI16();
                        _elem287.put(_key290, _val291);
                      }
                    }
                    _elem284.add(_elem287);
                  }
                }
                _elem281.add(_elem284);
              }
            }
            struct.adminclassSolution.add(_elem281);
          }
        }
        struct.setAdminclassSolutionIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list293 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.walkingclassStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>(_list293.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> _elem294;
          for (int _i295 = 0; _i295 < _list293.size; ++_i295)
          {
            {
              org.apache.thrift.protocol.TList _list296 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
              _elem294 = new java.util.ArrayList<java.lang.Double>(_list296.size);
              double _elem297;
              for (int _i298 = 0; _i298 < _list296.size; ++_i298)
              {
                _elem297 = iprot.readDouble();
                _elem294.add(_elem297);
              }
            }
            struct.walkingclassStudentAverageNumber.add(_elem294);
          }
        }
        struct.setWalkingclassStudentAverageNumberIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list299 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, iprot.readI32());
          struct.isHPMix = new java.util.ArrayList<java.lang.Short>(_list299.size);
          short _elem300;
          for (int _i301 = 0; _i301 < _list299.size; ++_i301)
          {
            _elem300 = iprot.readI16();
            struct.isHPMix.add(_elem300);
          }
        }
        struct.setIsHPMixIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list302 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.walkingClassNumber = new java.util.ArrayList<java.util.List<java.lang.Short>>(_list302.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Short> _elem303;
          for (int _i304 = 0; _i304 < _list302.size; ++_i304)
          {
            {
              org.apache.thrift.protocol.TList _list305 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, iprot.readI32());
              _elem303 = new java.util.ArrayList<java.lang.Short>(_list305.size);
              short _elem306;
              for (int _i307 = 0; _i307 < _list305.size; ++_i307)
              {
                _elem306 = iprot.readI16();
                _elem303.add(_elem306);
              }
            }
            struct.walkingClassNumber.add(_elem303);
          }
        }
        struct.setWalkingClassNumberIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list308 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I16, iprot.readI32());
          struct.subjectList = new java.util.ArrayList<java.lang.Short>(_list308.size);
          short _elem309;
          for (int _i310 = 0; _i310 < _list308.size; ++_i310)
          {
            _elem309 = iprot.readI16();
            struct.subjectList.add(_elem309);
          }
        }
        struct.setSubjectListIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list311 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.adminclassTransformSolution = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.lang.Short>>>(_list311.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Short,java.lang.Short>> _elem312;
          for (int _i313 = 0; _i313 < _list311.size; ++_i313)
          {
            {
              org.apache.thrift.protocol.TList _list314 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
              _elem312 = new java.util.ArrayList<java.util.Map<java.lang.Short,java.lang.Short>>(_list314.size);
              @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Short,java.lang.Short> _elem315;
              for (int _i316 = 0; _i316 < _list314.size; ++_i316)
              {
                {
                  org.apache.thrift.protocol.TMap _map317 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I16, org.apache.thrift.protocol.TType.I16, iprot.readI32());
                  _elem315 = new java.util.HashMap<java.lang.Short,java.lang.Short>(2*_map317.size);
                  short _key318;
                  short _val319;
                  for (int _i320 = 0; _i320 < _map317.size; ++_i320)
                  {
                    _key318 = iprot.readI16();
                    _val319 = iprot.readI16();
                    _elem315.put(_key318, _val319);
                  }
                }
                _elem312.add(_elem315);
              }
            }
            struct.adminclassTransformSolution.add(_elem312);
          }
        }
        struct.setAdminclassTransformSolutionIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list321 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.adminclassStudentSet = new java.util.ArrayList<java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>>(_list321.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>> _elem322;
          for (int _i323 = 0; _i323 < _list321.size; ++_i323)
          {
            {
              org.apache.thrift.protocol.TList _list324 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
              _elem322 = new java.util.ArrayList<java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>>>(_list324.size);
              @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Short,java.util.Set<java.lang.Short>> _elem325;
              for (int _i326 = 0; _i326 < _list324.size; ++_i326)
              {
                {
                  org.apache.thrift.protocol.TMap _map327 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I16, org.apache.thrift.protocol.TType.SET, iprot.readI32());
                  _elem325 = new java.util.HashMap<java.lang.Short,java.util.Set<java.lang.Short>>(2*_map327.size);
                  short _key328;
                  @org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Short> _val329;
                  for (int _i330 = 0; _i330 < _map327.size; ++_i330)
                  {
                    _key328 = iprot.readI16();
                    {
                      org.apache.thrift.protocol.TSet _set331 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I16, iprot.readI32());
                      _val329 = new java.util.HashSet<java.lang.Short>(2*_set331.size);
                      short _elem332;
                      for (int _i333 = 0; _i333 < _set331.size; ++_i333)
                      {
                        _elem332 = iprot.readI16();
                        _val329.add(_elem332);
                      }
                    }
                    _elem325.put(_key328, _val329);
                  }
                }
                _elem322.add(_elem325);
              }
            }
            struct.adminclassStudentSet.add(_elem322);
          }
        }
        struct.setAdminclassStudentSetIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

