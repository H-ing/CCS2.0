/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package goclass.rpc.server.source;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-11-07")
public class StageTwoResultOfClassStrategy implements org.apache.thrift.TBase<StageTwoResultOfClassStrategy, StageTwoResultOfClassStrategy._Fields>, java.io.Serializable, Cloneable, Comparable<StageTwoResultOfClassStrategy> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StageTwoResultOfClassStrategy");

  private static final org.apache.thrift.protocol.TField WALKINGCLASS_HPSOLUTION_FIELD_DESC = new org.apache.thrift.protocol.TField("walkingclassHPSolution", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField WALKINGCLASS_COMBINATION_SELECTION_FIELD_DESC = new org.apache.thrift.protocol.TField("walkingclassCombinationSelection", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("walkingclassHPStudentAverageNumber", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField WALKINGCLASS_HPCLASS_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("walkingclassHPClassNumber", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField MIN_CLASS_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("minClassNumber", org.apache.thrift.protocol.TType.LIST, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new StageTwoResultOfClassStrategyStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new StageTwoResultOfClassStrategyTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>> walkingclassHPSolution; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.lang.Integer>>> walkingclassCombinationSelection; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Double>> walkingclassHPStudentAverageNumber; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> walkingclassHPClassNumber; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> minClassNumber; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    WALKINGCLASS_HPSOLUTION((short)1, "walkingclassHPSolution"),
    WALKINGCLASS_COMBINATION_SELECTION((short)2, "walkingclassCombinationSelection"),
    WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER((short)3, "walkingclassHPStudentAverageNumber"),
    WALKINGCLASS_HPCLASS_NUMBER((short)4, "walkingclassHPClassNumber"),
    MIN_CLASS_NUMBER((short)5, "minClassNumber");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // WALKINGCLASS_HPSOLUTION
          return WALKINGCLASS_HPSOLUTION;
        case 2: // WALKINGCLASS_COMBINATION_SELECTION
          return WALKINGCLASS_COMBINATION_SELECTION;
        case 3: // WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER
          return WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER;
        case 4: // WALKINGCLASS_HPCLASS_NUMBER
          return WALKINGCLASS_HPCLASS_NUMBER;
        case 5: // MIN_CLASS_NUMBER
          return MIN_CLASS_NUMBER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.WALKINGCLASS_HPSOLUTION, new org.apache.thrift.meta_data.FieldMetaData("walkingclassHPSolution", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                    new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)))))));
    tmpMap.put(_Fields.WALKINGCLASS_COMBINATION_SELECTION, new org.apache.thrift.meta_data.FieldMetaData("walkingclassCombinationSelection", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))))));
    tmpMap.put(_Fields.WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("walkingclassHPStudentAverageNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)))));
    tmpMap.put(_Fields.WALKINGCLASS_HPCLASS_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("walkingclassHPClassNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)))));
    tmpMap.put(_Fields.MIN_CLASS_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("minClassNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StageTwoResultOfClassStrategy.class, metaDataMap);
  }

  public StageTwoResultOfClassStrategy() {
  }

  public StageTwoResultOfClassStrategy(
    java.util.List<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>> walkingclassHPSolution,
    java.util.List<java.util.List<java.util.List<java.lang.Integer>>> walkingclassCombinationSelection,
    java.util.List<java.util.List<java.lang.Double>> walkingclassHPStudentAverageNumber,
    java.util.List<java.util.List<java.lang.Integer>> walkingclassHPClassNumber,
    java.util.List<java.lang.Integer> minClassNumber)
  {
    this();
    this.walkingclassHPSolution = walkingclassHPSolution;
    this.walkingclassCombinationSelection = walkingclassCombinationSelection;
    this.walkingclassHPStudentAverageNumber = walkingclassHPStudentAverageNumber;
    this.walkingclassHPClassNumber = walkingclassHPClassNumber;
    this.minClassNumber = minClassNumber;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StageTwoResultOfClassStrategy(StageTwoResultOfClassStrategy other) {
    if (other.isSetWalkingclassHPSolution()) {
      java.util.List<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>> __this__walkingclassHPSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>>(other.walkingclassHPSolution.size());
      for (java.util.List<java.util.List<java.util.List<java.lang.Integer>>> other_element : other.walkingclassHPSolution) {
        java.util.List<java.util.List<java.util.List<java.lang.Integer>>> __this__walkingclassHPSolution_copy = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>(other_element.size());
        for (java.util.List<java.util.List<java.lang.Integer>> other_element_element : other_element) {
          java.util.List<java.util.List<java.lang.Integer>> __this__walkingclassHPSolution_copy_copy = new java.util.ArrayList<java.util.List<java.lang.Integer>>(other_element_element.size());
          for (java.util.List<java.lang.Integer> other_element_element_element : other_element_element) {
            java.util.List<java.lang.Integer> __this__walkingclassHPSolution_copy_copy_copy = new java.util.ArrayList<java.lang.Integer>(other_element_element_element);
            __this__walkingclassHPSolution_copy_copy.add(__this__walkingclassHPSolution_copy_copy_copy);
          }
          __this__walkingclassHPSolution_copy.add(__this__walkingclassHPSolution_copy_copy);
        }
        __this__walkingclassHPSolution.add(__this__walkingclassHPSolution_copy);
      }
      this.walkingclassHPSolution = __this__walkingclassHPSolution;
    }
    if (other.isSetWalkingclassCombinationSelection()) {
      java.util.List<java.util.List<java.util.List<java.lang.Integer>>> __this__walkingclassCombinationSelection = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>(other.walkingclassCombinationSelection.size());
      for (java.util.List<java.util.List<java.lang.Integer>> other_element : other.walkingclassCombinationSelection) {
        java.util.List<java.util.List<java.lang.Integer>> __this__walkingclassCombinationSelection_copy = new java.util.ArrayList<java.util.List<java.lang.Integer>>(other_element.size());
        for (java.util.List<java.lang.Integer> other_element_element : other_element) {
          java.util.List<java.lang.Integer> __this__walkingclassCombinationSelection_copy_copy = new java.util.ArrayList<java.lang.Integer>(other_element_element);
          __this__walkingclassCombinationSelection_copy.add(__this__walkingclassCombinationSelection_copy_copy);
        }
        __this__walkingclassCombinationSelection.add(__this__walkingclassCombinationSelection_copy);
      }
      this.walkingclassCombinationSelection = __this__walkingclassCombinationSelection;
    }
    if (other.isSetWalkingclassHPStudentAverageNumber()) {
      java.util.List<java.util.List<java.lang.Double>> __this__walkingclassHPStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>(other.walkingclassHPStudentAverageNumber.size());
      for (java.util.List<java.lang.Double> other_element : other.walkingclassHPStudentAverageNumber) {
        java.util.List<java.lang.Double> __this__walkingclassHPStudentAverageNumber_copy = new java.util.ArrayList<java.lang.Double>(other_element);
        __this__walkingclassHPStudentAverageNumber.add(__this__walkingclassHPStudentAverageNumber_copy);
      }
      this.walkingclassHPStudentAverageNumber = __this__walkingclassHPStudentAverageNumber;
    }
    if (other.isSetWalkingclassHPClassNumber()) {
      java.util.List<java.util.List<java.lang.Integer>> __this__walkingclassHPClassNumber = new java.util.ArrayList<java.util.List<java.lang.Integer>>(other.walkingclassHPClassNumber.size());
      for (java.util.List<java.lang.Integer> other_element : other.walkingclassHPClassNumber) {
        java.util.List<java.lang.Integer> __this__walkingclassHPClassNumber_copy = new java.util.ArrayList<java.lang.Integer>(other_element);
        __this__walkingclassHPClassNumber.add(__this__walkingclassHPClassNumber_copy);
      }
      this.walkingclassHPClassNumber = __this__walkingclassHPClassNumber;
    }
    if (other.isSetMinClassNumber()) {
      java.util.List<java.lang.Integer> __this__minClassNumber = new java.util.ArrayList<java.lang.Integer>(other.minClassNumber);
      this.minClassNumber = __this__minClassNumber;
    }
  }

  public StageTwoResultOfClassStrategy deepCopy() {
    return new StageTwoResultOfClassStrategy(this);
  }

  @Override
  public void clear() {
    this.walkingclassHPSolution = null;
    this.walkingclassCombinationSelection = null;
    this.walkingclassHPStudentAverageNumber = null;
    this.walkingclassHPClassNumber = null;
    this.minClassNumber = null;
  }

  public int getWalkingclassHPSolutionSize() {
    return (this.walkingclassHPSolution == null) ? 0 : this.walkingclassHPSolution.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>> getWalkingclassHPSolutionIterator() {
    return (this.walkingclassHPSolution == null) ? null : this.walkingclassHPSolution.iterator();
  }

  public void addToWalkingclassHPSolution(java.util.List<java.util.List<java.util.List<java.lang.Integer>>> elem) {
    if (this.walkingclassHPSolution == null) {
      this.walkingclassHPSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>>();
    }
    this.walkingclassHPSolution.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>> getWalkingclassHPSolution() {
    return this.walkingclassHPSolution;
  }

  public StageTwoResultOfClassStrategy setWalkingclassHPSolution(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>> walkingclassHPSolution) {
    this.walkingclassHPSolution = walkingclassHPSolution;
    return this;
  }

  public void unsetWalkingclassHPSolution() {
    this.walkingclassHPSolution = null;
  }

  /** Returns true if field walkingclassHPSolution is set (has been assigned a value) and false otherwise */
  public boolean isSetWalkingclassHPSolution() {
    return this.walkingclassHPSolution != null;
  }

  public void setWalkingclassHPSolutionIsSet(boolean value) {
    if (!value) {
      this.walkingclassHPSolution = null;
    }
  }

  public int getWalkingclassCombinationSelectionSize() {
    return (this.walkingclassCombinationSelection == null) ? 0 : this.walkingclassCombinationSelection.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.List<java.lang.Integer>>> getWalkingclassCombinationSelectionIterator() {
    return (this.walkingclassCombinationSelection == null) ? null : this.walkingclassCombinationSelection.iterator();
  }

  public void addToWalkingclassCombinationSelection(java.util.List<java.util.List<java.lang.Integer>> elem) {
    if (this.walkingclassCombinationSelection == null) {
      this.walkingclassCombinationSelection = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>();
    }
    this.walkingclassCombinationSelection.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.List<java.lang.Integer>>> getWalkingclassCombinationSelection() {
    return this.walkingclassCombinationSelection;
  }

  public StageTwoResultOfClassStrategy setWalkingclassCombinationSelection(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.lang.Integer>>> walkingclassCombinationSelection) {
    this.walkingclassCombinationSelection = walkingclassCombinationSelection;
    return this;
  }

  public void unsetWalkingclassCombinationSelection() {
    this.walkingclassCombinationSelection = null;
  }

  /** Returns true if field walkingclassCombinationSelection is set (has been assigned a value) and false otherwise */
  public boolean isSetWalkingclassCombinationSelection() {
    return this.walkingclassCombinationSelection != null;
  }

  public void setWalkingclassCombinationSelectionIsSet(boolean value) {
    if (!value) {
      this.walkingclassCombinationSelection = null;
    }
  }

  public int getWalkingclassHPStudentAverageNumberSize() {
    return (this.walkingclassHPStudentAverageNumber == null) ? 0 : this.walkingclassHPStudentAverageNumber.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.Double>> getWalkingclassHPStudentAverageNumberIterator() {
    return (this.walkingclassHPStudentAverageNumber == null) ? null : this.walkingclassHPStudentAverageNumber.iterator();
  }

  public void addToWalkingclassHPStudentAverageNumber(java.util.List<java.lang.Double> elem) {
    if (this.walkingclassHPStudentAverageNumber == null) {
      this.walkingclassHPStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>();
    }
    this.walkingclassHPStudentAverageNumber.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.Double>> getWalkingclassHPStudentAverageNumber() {
    return this.walkingclassHPStudentAverageNumber;
  }

  public StageTwoResultOfClassStrategy setWalkingclassHPStudentAverageNumber(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Double>> walkingclassHPStudentAverageNumber) {
    this.walkingclassHPStudentAverageNumber = walkingclassHPStudentAverageNumber;
    return this;
  }

  public void unsetWalkingclassHPStudentAverageNumber() {
    this.walkingclassHPStudentAverageNumber = null;
  }

  /** Returns true if field walkingclassHPStudentAverageNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetWalkingclassHPStudentAverageNumber() {
    return this.walkingclassHPStudentAverageNumber != null;
  }

  public void setWalkingclassHPStudentAverageNumberIsSet(boolean value) {
    if (!value) {
      this.walkingclassHPStudentAverageNumber = null;
    }
  }

  public int getWalkingclassHPClassNumberSize() {
    return (this.walkingclassHPClassNumber == null) ? 0 : this.walkingclassHPClassNumber.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.Integer>> getWalkingclassHPClassNumberIterator() {
    return (this.walkingclassHPClassNumber == null) ? null : this.walkingclassHPClassNumber.iterator();
  }

  public void addToWalkingclassHPClassNumber(java.util.List<java.lang.Integer> elem) {
    if (this.walkingclassHPClassNumber == null) {
      this.walkingclassHPClassNumber = new java.util.ArrayList<java.util.List<java.lang.Integer>>();
    }
    this.walkingclassHPClassNumber.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.Integer>> getWalkingclassHPClassNumber() {
    return this.walkingclassHPClassNumber;
  }

  public StageTwoResultOfClassStrategy setWalkingclassHPClassNumber(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> walkingclassHPClassNumber) {
    this.walkingclassHPClassNumber = walkingclassHPClassNumber;
    return this;
  }

  public void unsetWalkingclassHPClassNumber() {
    this.walkingclassHPClassNumber = null;
  }

  /** Returns true if field walkingclassHPClassNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetWalkingclassHPClassNumber() {
    return this.walkingclassHPClassNumber != null;
  }

  public void setWalkingclassHPClassNumberIsSet(boolean value) {
    if (!value) {
      this.walkingclassHPClassNumber = null;
    }
  }

  public int getMinClassNumberSize() {
    return (this.minClassNumber == null) ? 0 : this.minClassNumber.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Integer> getMinClassNumberIterator() {
    return (this.minClassNumber == null) ? null : this.minClassNumber.iterator();
  }

  public void addToMinClassNumber(int elem) {
    if (this.minClassNumber == null) {
      this.minClassNumber = new java.util.ArrayList<java.lang.Integer>();
    }
    this.minClassNumber.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Integer> getMinClassNumber() {
    return this.minClassNumber;
  }

  public StageTwoResultOfClassStrategy setMinClassNumber(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> minClassNumber) {
    this.minClassNumber = minClassNumber;
    return this;
  }

  public void unsetMinClassNumber() {
    this.minClassNumber = null;
  }

  /** Returns true if field minClassNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetMinClassNumber() {
    return this.minClassNumber != null;
  }

  public void setMinClassNumberIsSet(boolean value) {
    if (!value) {
      this.minClassNumber = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case WALKINGCLASS_HPSOLUTION:
      if (value == null) {
        unsetWalkingclassHPSolution();
      } else {
        setWalkingclassHPSolution((java.util.List<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>>)value);
      }
      break;

    case WALKINGCLASS_COMBINATION_SELECTION:
      if (value == null) {
        unsetWalkingclassCombinationSelection();
      } else {
        setWalkingclassCombinationSelection((java.util.List<java.util.List<java.util.List<java.lang.Integer>>>)value);
      }
      break;

    case WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER:
      if (value == null) {
        unsetWalkingclassHPStudentAverageNumber();
      } else {
        setWalkingclassHPStudentAverageNumber((java.util.List<java.util.List<java.lang.Double>>)value);
      }
      break;

    case WALKINGCLASS_HPCLASS_NUMBER:
      if (value == null) {
        unsetWalkingclassHPClassNumber();
      } else {
        setWalkingclassHPClassNumber((java.util.List<java.util.List<java.lang.Integer>>)value);
      }
      break;

    case MIN_CLASS_NUMBER:
      if (value == null) {
        unsetMinClassNumber();
      } else {
        setMinClassNumber((java.util.List<java.lang.Integer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case WALKINGCLASS_HPSOLUTION:
      return getWalkingclassHPSolution();

    case WALKINGCLASS_COMBINATION_SELECTION:
      return getWalkingclassCombinationSelection();

    case WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER:
      return getWalkingclassHPStudentAverageNumber();

    case WALKINGCLASS_HPCLASS_NUMBER:
      return getWalkingclassHPClassNumber();

    case MIN_CLASS_NUMBER:
      return getMinClassNumber();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case WALKINGCLASS_HPSOLUTION:
      return isSetWalkingclassHPSolution();
    case WALKINGCLASS_COMBINATION_SELECTION:
      return isSetWalkingclassCombinationSelection();
    case WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER:
      return isSetWalkingclassHPStudentAverageNumber();
    case WALKINGCLASS_HPCLASS_NUMBER:
      return isSetWalkingclassHPClassNumber();
    case MIN_CLASS_NUMBER:
      return isSetMinClassNumber();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof StageTwoResultOfClassStrategy)
      return this.equals((StageTwoResultOfClassStrategy)that);
    return false;
  }

  public boolean equals(StageTwoResultOfClassStrategy that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_walkingclassHPSolution = true && this.isSetWalkingclassHPSolution();
    boolean that_present_walkingclassHPSolution = true && that.isSetWalkingclassHPSolution();
    if (this_present_walkingclassHPSolution || that_present_walkingclassHPSolution) {
      if (!(this_present_walkingclassHPSolution && that_present_walkingclassHPSolution))
        return false;
      if (!this.walkingclassHPSolution.equals(that.walkingclassHPSolution))
        return false;
    }

    boolean this_present_walkingclassCombinationSelection = true && this.isSetWalkingclassCombinationSelection();
    boolean that_present_walkingclassCombinationSelection = true && that.isSetWalkingclassCombinationSelection();
    if (this_present_walkingclassCombinationSelection || that_present_walkingclassCombinationSelection) {
      if (!(this_present_walkingclassCombinationSelection && that_present_walkingclassCombinationSelection))
        return false;
      if (!this.walkingclassCombinationSelection.equals(that.walkingclassCombinationSelection))
        return false;
    }

    boolean this_present_walkingclassHPStudentAverageNumber = true && this.isSetWalkingclassHPStudentAverageNumber();
    boolean that_present_walkingclassHPStudentAverageNumber = true && that.isSetWalkingclassHPStudentAverageNumber();
    if (this_present_walkingclassHPStudentAverageNumber || that_present_walkingclassHPStudentAverageNumber) {
      if (!(this_present_walkingclassHPStudentAverageNumber && that_present_walkingclassHPStudentAverageNumber))
        return false;
      if (!this.walkingclassHPStudentAverageNumber.equals(that.walkingclassHPStudentAverageNumber))
        return false;
    }

    boolean this_present_walkingclassHPClassNumber = true && this.isSetWalkingclassHPClassNumber();
    boolean that_present_walkingclassHPClassNumber = true && that.isSetWalkingclassHPClassNumber();
    if (this_present_walkingclassHPClassNumber || that_present_walkingclassHPClassNumber) {
      if (!(this_present_walkingclassHPClassNumber && that_present_walkingclassHPClassNumber))
        return false;
      if (!this.walkingclassHPClassNumber.equals(that.walkingclassHPClassNumber))
        return false;
    }

    boolean this_present_minClassNumber = true && this.isSetMinClassNumber();
    boolean that_present_minClassNumber = true && that.isSetMinClassNumber();
    if (this_present_minClassNumber || that_present_minClassNumber) {
      if (!(this_present_minClassNumber && that_present_minClassNumber))
        return false;
      if (!this.minClassNumber.equals(that.minClassNumber))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetWalkingclassHPSolution()) ? 131071 : 524287);
    if (isSetWalkingclassHPSolution())
      hashCode = hashCode * 8191 + walkingclassHPSolution.hashCode();

    hashCode = hashCode * 8191 + ((isSetWalkingclassCombinationSelection()) ? 131071 : 524287);
    if (isSetWalkingclassCombinationSelection())
      hashCode = hashCode * 8191 + walkingclassCombinationSelection.hashCode();

    hashCode = hashCode * 8191 + ((isSetWalkingclassHPStudentAverageNumber()) ? 131071 : 524287);
    if (isSetWalkingclassHPStudentAverageNumber())
      hashCode = hashCode * 8191 + walkingclassHPStudentAverageNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetWalkingclassHPClassNumber()) ? 131071 : 524287);
    if (isSetWalkingclassHPClassNumber())
      hashCode = hashCode * 8191 + walkingclassHPClassNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetMinClassNumber()) ? 131071 : 524287);
    if (isSetMinClassNumber())
      hashCode = hashCode * 8191 + minClassNumber.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(StageTwoResultOfClassStrategy other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetWalkingclassHPSolution()).compareTo(other.isSetWalkingclassHPSolution());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalkingclassHPSolution()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.walkingclassHPSolution, other.walkingclassHPSolution);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWalkingclassCombinationSelection()).compareTo(other.isSetWalkingclassCombinationSelection());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalkingclassCombinationSelection()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.walkingclassCombinationSelection, other.walkingclassCombinationSelection);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWalkingclassHPStudentAverageNumber()).compareTo(other.isSetWalkingclassHPStudentAverageNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalkingclassHPStudentAverageNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.walkingclassHPStudentAverageNumber, other.walkingclassHPStudentAverageNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWalkingclassHPClassNumber()).compareTo(other.isSetWalkingclassHPClassNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalkingclassHPClassNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.walkingclassHPClassNumber, other.walkingclassHPClassNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMinClassNumber()).compareTo(other.isSetMinClassNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinClassNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minClassNumber, other.minClassNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("StageTwoResultOfClassStrategy(");
    boolean first = true;

    sb.append("walkingclassHPSolution:");
    if (this.walkingclassHPSolution == null) {
      sb.append("null");
    } else {
      sb.append(this.walkingclassHPSolution);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("walkingclassCombinationSelection:");
    if (this.walkingclassCombinationSelection == null) {
      sb.append("null");
    } else {
      sb.append(this.walkingclassCombinationSelection);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("walkingclassHPStudentAverageNumber:");
    if (this.walkingclassHPStudentAverageNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.walkingclassHPStudentAverageNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("walkingclassHPClassNumber:");
    if (this.walkingclassHPClassNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.walkingclassHPClassNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("minClassNumber:");
    if (this.minClassNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.minClassNumber);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StageTwoResultOfClassStrategyStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StageTwoResultOfClassStrategyStandardScheme getScheme() {
      return new StageTwoResultOfClassStrategyStandardScheme();
    }
  }

  private static class StageTwoResultOfClassStrategyStandardScheme extends org.apache.thrift.scheme.StandardScheme<StageTwoResultOfClassStrategy> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StageTwoResultOfClassStrategy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // WALKINGCLASS_HPSOLUTION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list96 = iprot.readListBegin();
                struct.walkingclassHPSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>>(_list96.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.lang.Integer>>> _elem97;
                for (int _i98 = 0; _i98 < _list96.size; ++_i98)
                {
                  {
                    org.apache.thrift.protocol.TList _list99 = iprot.readListBegin();
                    _elem97 = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>(_list99.size);
                    @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> _elem100;
                    for (int _i101 = 0; _i101 < _list99.size; ++_i101)
                    {
                      {
                        org.apache.thrift.protocol.TList _list102 = iprot.readListBegin();
                        _elem100 = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list102.size);
                        @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem103;
                        for (int _i104 = 0; _i104 < _list102.size; ++_i104)
                        {
                          {
                            org.apache.thrift.protocol.TList _list105 = iprot.readListBegin();
                            _elem103 = new java.util.ArrayList<java.lang.Integer>(_list105.size);
                            int _elem106;
                            for (int _i107 = 0; _i107 < _list105.size; ++_i107)
                            {
                              _elem106 = iprot.readI32();
                              _elem103.add(_elem106);
                            }
                            iprot.readListEnd();
                          }
                          _elem100.add(_elem103);
                        }
                        iprot.readListEnd();
                      }
                      _elem97.add(_elem100);
                    }
                    iprot.readListEnd();
                  }
                  struct.walkingclassHPSolution.add(_elem97);
                }
                iprot.readListEnd();
              }
              struct.setWalkingclassHPSolutionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WALKINGCLASS_COMBINATION_SELECTION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list108 = iprot.readListBegin();
                struct.walkingclassCombinationSelection = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>(_list108.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> _elem109;
                for (int _i110 = 0; _i110 < _list108.size; ++_i110)
                {
                  {
                    org.apache.thrift.protocol.TList _list111 = iprot.readListBegin();
                    _elem109 = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list111.size);
                    @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem112;
                    for (int _i113 = 0; _i113 < _list111.size; ++_i113)
                    {
                      {
                        org.apache.thrift.protocol.TList _list114 = iprot.readListBegin();
                        _elem112 = new java.util.ArrayList<java.lang.Integer>(_list114.size);
                        int _elem115;
                        for (int _i116 = 0; _i116 < _list114.size; ++_i116)
                        {
                          _elem115 = iprot.readI32();
                          _elem112.add(_elem115);
                        }
                        iprot.readListEnd();
                      }
                      _elem109.add(_elem112);
                    }
                    iprot.readListEnd();
                  }
                  struct.walkingclassCombinationSelection.add(_elem109);
                }
                iprot.readListEnd();
              }
              struct.setWalkingclassCombinationSelectionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list117 = iprot.readListBegin();
                struct.walkingclassHPStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>(_list117.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> _elem118;
                for (int _i119 = 0; _i119 < _list117.size; ++_i119)
                {
                  {
                    org.apache.thrift.protocol.TList _list120 = iprot.readListBegin();
                    _elem118 = new java.util.ArrayList<java.lang.Double>(_list120.size);
                    double _elem121;
                    for (int _i122 = 0; _i122 < _list120.size; ++_i122)
                    {
                      _elem121 = iprot.readDouble();
                      _elem118.add(_elem121);
                    }
                    iprot.readListEnd();
                  }
                  struct.walkingclassHPStudentAverageNumber.add(_elem118);
                }
                iprot.readListEnd();
              }
              struct.setWalkingclassHPStudentAverageNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // WALKINGCLASS_HPCLASS_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list123 = iprot.readListBegin();
                struct.walkingclassHPClassNumber = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list123.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem124;
                for (int _i125 = 0; _i125 < _list123.size; ++_i125)
                {
                  {
                    org.apache.thrift.protocol.TList _list126 = iprot.readListBegin();
                    _elem124 = new java.util.ArrayList<java.lang.Integer>(_list126.size);
                    int _elem127;
                    for (int _i128 = 0; _i128 < _list126.size; ++_i128)
                    {
                      _elem127 = iprot.readI32();
                      _elem124.add(_elem127);
                    }
                    iprot.readListEnd();
                  }
                  struct.walkingclassHPClassNumber.add(_elem124);
                }
                iprot.readListEnd();
              }
              struct.setWalkingclassHPClassNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MIN_CLASS_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list129 = iprot.readListBegin();
                struct.minClassNumber = new java.util.ArrayList<java.lang.Integer>(_list129.size);
                int _elem130;
                for (int _i131 = 0; _i131 < _list129.size; ++_i131)
                {
                  _elem130 = iprot.readI32();
                  struct.minClassNumber.add(_elem130);
                }
                iprot.readListEnd();
              }
              struct.setMinClassNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StageTwoResultOfClassStrategy struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.walkingclassHPSolution != null) {
        oprot.writeFieldBegin(WALKINGCLASS_HPSOLUTION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.walkingclassHPSolution.size()));
          for (java.util.List<java.util.List<java.util.List<java.lang.Integer>>> _iter132 : struct.walkingclassHPSolution)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, _iter132.size()));
              for (java.util.List<java.util.List<java.lang.Integer>> _iter133 : _iter132)
              {
                {
                  oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, _iter133.size()));
                  for (java.util.List<java.lang.Integer> _iter134 : _iter133)
                  {
                    {
                      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, _iter134.size()));
                      for (int _iter135 : _iter134)
                      {
                        oprot.writeI32(_iter135);
                      }
                      oprot.writeListEnd();
                    }
                  }
                  oprot.writeListEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.walkingclassCombinationSelection != null) {
        oprot.writeFieldBegin(WALKINGCLASS_COMBINATION_SELECTION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.walkingclassCombinationSelection.size()));
          for (java.util.List<java.util.List<java.lang.Integer>> _iter136 : struct.walkingclassCombinationSelection)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, _iter136.size()));
              for (java.util.List<java.lang.Integer> _iter137 : _iter136)
              {
                {
                  oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, _iter137.size()));
                  for (int _iter138 : _iter137)
                  {
                    oprot.writeI32(_iter138);
                  }
                  oprot.writeListEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.walkingclassHPStudentAverageNumber != null) {
        oprot.writeFieldBegin(WALKINGCLASS_HPSTUDENT_AVERAGE_NUMBER_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.walkingclassHPStudentAverageNumber.size()));
          for (java.util.List<java.lang.Double> _iter139 : struct.walkingclassHPStudentAverageNumber)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, _iter139.size()));
              for (double _iter140 : _iter139)
              {
                oprot.writeDouble(_iter140);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.walkingclassHPClassNumber != null) {
        oprot.writeFieldBegin(WALKINGCLASS_HPCLASS_NUMBER_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.walkingclassHPClassNumber.size()));
          for (java.util.List<java.lang.Integer> _iter141 : struct.walkingclassHPClassNumber)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, _iter141.size()));
              for (int _iter142 : _iter141)
              {
                oprot.writeI32(_iter142);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.minClassNumber != null) {
        oprot.writeFieldBegin(MIN_CLASS_NUMBER_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.minClassNumber.size()));
          for (int _iter143 : struct.minClassNumber)
          {
            oprot.writeI32(_iter143);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StageTwoResultOfClassStrategyTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StageTwoResultOfClassStrategyTupleScheme getScheme() {
      return new StageTwoResultOfClassStrategyTupleScheme();
    }
  }

  private static class StageTwoResultOfClassStrategyTupleScheme extends org.apache.thrift.scheme.TupleScheme<StageTwoResultOfClassStrategy> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StageTwoResultOfClassStrategy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetWalkingclassHPSolution()) {
        optionals.set(0);
      }
      if (struct.isSetWalkingclassCombinationSelection()) {
        optionals.set(1);
      }
      if (struct.isSetWalkingclassHPStudentAverageNumber()) {
        optionals.set(2);
      }
      if (struct.isSetWalkingclassHPClassNumber()) {
        optionals.set(3);
      }
      if (struct.isSetMinClassNumber()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetWalkingclassHPSolution()) {
        {
          oprot.writeI32(struct.walkingclassHPSolution.size());
          for (java.util.List<java.util.List<java.util.List<java.lang.Integer>>> _iter144 : struct.walkingclassHPSolution)
          {
            {
              oprot.writeI32(_iter144.size());
              for (java.util.List<java.util.List<java.lang.Integer>> _iter145 : _iter144)
              {
                {
                  oprot.writeI32(_iter145.size());
                  for (java.util.List<java.lang.Integer> _iter146 : _iter145)
                  {
                    {
                      oprot.writeI32(_iter146.size());
                      for (int _iter147 : _iter146)
                      {
                        oprot.writeI32(_iter147);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (struct.isSetWalkingclassCombinationSelection()) {
        {
          oprot.writeI32(struct.walkingclassCombinationSelection.size());
          for (java.util.List<java.util.List<java.lang.Integer>> _iter148 : struct.walkingclassCombinationSelection)
          {
            {
              oprot.writeI32(_iter148.size());
              for (java.util.List<java.lang.Integer> _iter149 : _iter148)
              {
                {
                  oprot.writeI32(_iter149.size());
                  for (int _iter150 : _iter149)
                  {
                    oprot.writeI32(_iter150);
                  }
                }
              }
            }
          }
        }
      }
      if (struct.isSetWalkingclassHPStudentAverageNumber()) {
        {
          oprot.writeI32(struct.walkingclassHPStudentAverageNumber.size());
          for (java.util.List<java.lang.Double> _iter151 : struct.walkingclassHPStudentAverageNumber)
          {
            {
              oprot.writeI32(_iter151.size());
              for (double _iter152 : _iter151)
              {
                oprot.writeDouble(_iter152);
              }
            }
          }
        }
      }
      if (struct.isSetWalkingclassHPClassNumber()) {
        {
          oprot.writeI32(struct.walkingclassHPClassNumber.size());
          for (java.util.List<java.lang.Integer> _iter153 : struct.walkingclassHPClassNumber)
          {
            {
              oprot.writeI32(_iter153.size());
              for (int _iter154 : _iter153)
              {
                oprot.writeI32(_iter154);
              }
            }
          }
        }
      }
      if (struct.isSetMinClassNumber()) {
        {
          oprot.writeI32(struct.minClassNumber.size());
          for (int _iter155 : struct.minClassNumber)
          {
            oprot.writeI32(_iter155);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StageTwoResultOfClassStrategy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list156 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.walkingclassHPSolution = new java.util.ArrayList<java.util.List<java.util.List<java.util.List<java.lang.Integer>>>>(_list156.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<java.lang.Integer>>> _elem157;
          for (int _i158 = 0; _i158 < _list156.size; ++_i158)
          {
            {
              org.apache.thrift.protocol.TList _list159 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _elem157 = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>(_list159.size);
              @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> _elem160;
              for (int _i161 = 0; _i161 < _list159.size; ++_i161)
              {
                {
                  org.apache.thrift.protocol.TList _list162 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
                  _elem160 = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list162.size);
                  @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem163;
                  for (int _i164 = 0; _i164 < _list162.size; ++_i164)
                  {
                    {
                      org.apache.thrift.protocol.TList _list165 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
                      _elem163 = new java.util.ArrayList<java.lang.Integer>(_list165.size);
                      int _elem166;
                      for (int _i167 = 0; _i167 < _list165.size; ++_i167)
                      {
                        _elem166 = iprot.readI32();
                        _elem163.add(_elem166);
                      }
                    }
                    _elem160.add(_elem163);
                  }
                }
                _elem157.add(_elem160);
              }
            }
            struct.walkingclassHPSolution.add(_elem157);
          }
        }
        struct.setWalkingclassHPSolutionIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list168 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.walkingclassCombinationSelection = new java.util.ArrayList<java.util.List<java.util.List<java.lang.Integer>>>(_list168.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Integer>> _elem169;
          for (int _i170 = 0; _i170 < _list168.size; ++_i170)
          {
            {
              org.apache.thrift.protocol.TList _list171 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _elem169 = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list171.size);
              @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem172;
              for (int _i173 = 0; _i173 < _list171.size; ++_i173)
              {
                {
                  org.apache.thrift.protocol.TList _list174 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
                  _elem172 = new java.util.ArrayList<java.lang.Integer>(_list174.size);
                  int _elem175;
                  for (int _i176 = 0; _i176 < _list174.size; ++_i176)
                  {
                    _elem175 = iprot.readI32();
                    _elem172.add(_elem175);
                  }
                }
                _elem169.add(_elem172);
              }
            }
            struct.walkingclassCombinationSelection.add(_elem169);
          }
        }
        struct.setWalkingclassCombinationSelectionIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list177 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.walkingclassHPStudentAverageNumber = new java.util.ArrayList<java.util.List<java.lang.Double>>(_list177.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> _elem178;
          for (int _i179 = 0; _i179 < _list177.size; ++_i179)
          {
            {
              org.apache.thrift.protocol.TList _list180 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
              _elem178 = new java.util.ArrayList<java.lang.Double>(_list180.size);
              double _elem181;
              for (int _i182 = 0; _i182 < _list180.size; ++_i182)
              {
                _elem181 = iprot.readDouble();
                _elem178.add(_elem181);
              }
            }
            struct.walkingclassHPStudentAverageNumber.add(_elem178);
          }
        }
        struct.setWalkingclassHPStudentAverageNumberIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list183 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.walkingclassHPClassNumber = new java.util.ArrayList<java.util.List<java.lang.Integer>>(_list183.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> _elem184;
          for (int _i185 = 0; _i185 < _list183.size; ++_i185)
          {
            {
              org.apache.thrift.protocol.TList _list186 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
              _elem184 = new java.util.ArrayList<java.lang.Integer>(_list186.size);
              int _elem187;
              for (int _i188 = 0; _i188 < _list186.size; ++_i188)
              {
                _elem187 = iprot.readI32();
                _elem184.add(_elem187);
              }
            }
            struct.walkingclassHPClassNumber.add(_elem184);
          }
        }
        struct.setWalkingclassHPClassNumberIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list189 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.minClassNumber = new java.util.ArrayList<java.lang.Integer>(_list189.size);
          int _elem190;
          for (int _i191 = 0; _i191 < _list189.size; ++_i191)
          {
            _elem190 = iprot.readI32();
            struct.minClassNumber.add(_elem190);
          }
        }
        struct.setMinClassNumberIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

